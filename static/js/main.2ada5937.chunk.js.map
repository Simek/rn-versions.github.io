{"version":3,"sources":["VersionLegend.module.scss","App.module.scss","VersionDownloadChart.module.scss","PackageCard.module.scss","NavBar.module.scss","VersionDownloadChart.styles.ts","PackageDescription.ts","generateColor.ts","getContrastingColor.ts","VersionTooltip.tsx","VersionLegend.tsx","VersionDownloadChart.tsx","HistoryReader.ts","Themes.ts","PackageCard.tsx","assets/ReactLogoIcon.tsx","NavBar.tsx","App.tsx","index.tsx","VersionTooltip.module.scss"],"names":["module","exports","styles","area","isAnimationActive","responsiveContainer","width","height","grid","strokeDasharray","stroke","xAxis","tickLine","tickMargin","yAxis","tickSize","tickCount","tooltip","animationDuration","animationEasing","nightlyHashVersionLabeler","version","match","groups","hash","isNightly","v","semver","lt","minVersion","min","gte","includePrerelease","packages","friendlyName","versionFilter","versionLabeler","year","parseInt","month","day","date","Date","toLocaleDateString","canary","cssColorFromHsv","hue","sat","val","l","s","Math","round","hueDifference","hue1","hue2","abs","MAX_COLOR_ALPHA","cssColor","color","easyColor","_rgba","str","startsWith","length","test","r","slice","g","b","a","_hex6","_hex3","hasAlpha","expectedPartCount","parts","split","map","Number","rgba","hsl2rgb","h","_hsla","document","elem","createElement","style","backgroundColor","position","top","left","body","appendChild","computedColor","getComputedStyle","removeChild","trim","_browserCompute","rgbToString","rgb2hex","_numberToPaddedHex","join","num","hex","toString","hsl","c","x","m","r1","g1","b1","contrastDefaults","minimal","low","medium","high","contrastCache","rgbLookup","cache","getContrastingColor","requiredContrast","desiredRatio","colorKey","JSON","stringify","backgroundColorKey","bgEntry","fgEntry","fg","newFg","adjustForContrast","baseline","target","desiredRelLuminance","getContrastingLuminanceRange","contrastAdjust","suggestedRelLuminance","currRelLuminance","relativeLuminance","max","rgb","delta","rgb2hsl","desiredMin","desiredMax","minL","maxL","rgbFinal","relLum","suggestion","standardToLinear","pow","VersionTooltipContent","label","payload","measurementTransform","theme","reversedItems","reverse","ThemeContext","Consumer","contextTheme","unixTime","versionsList","className","entry","i","colorChipColor","semanticColors","bodyBackground","formattedValue","count","versionCounts","pct","Object","values","reduce","toLocaleString","formatCount","value","versionsListItem","versionColorIndicator","Text","variant","versionLabel","name","versionCount","ThemeProvider","frame","VersionLegend","calculateDateTicks","dates","maxTicks","sortedDates","sort","first","last","dataDuration","maxInteriorTicks","tickInterval","floor","ticks","Set","nextTick","fromDayStart","add","duration","dayStart","setHours","getTime","VersionDownloadChart","historyPoints","maxDaysShown","maxVersionsShown","showLegend","showTooltip","unit","tooltipTheme","useState","legendElement","setLegendElement","datapoints","n","windowInDays","latestDate","earliestAllowableDate","versionsInWindow","point","existingCount","topVersions","entries","filter","p","has","filterTopN","props","dateTimeFormat","Intl","DateTimeFormat","allVersionsSet","chartAreas","versions","latAvoidToken","undefined","areas","avoidToken","randomGenerator","randomSeed","create","triesRemaining","random","adjacentHue","allHues","find","otherHue","saturation","generateColor","unshift","Area","styleProps","key","dataKey","datapoint","stackId","fill","fillOpacity","createChartAreas","data","measurePoint","datePoint","push","placeholderContainer","chartContainer","ResponsiveContainer","AreaChart","reverseStackOrder","stackOffset","XAxis","tick","bodyText","type","scale","domain","tickFormatter","format","interval","YAxis","Tooltip","content","tooltipProps","Legend","createPortal","CartesianGrid","strokeOpacity","ref","el","legend","HistoryReader","packageIdentifier","packageDescription","majorDatePoints","patchDatePoints","prereleaseDatePoints","this","accumulateDatePoints","versionMapper","mapToMajor","versionParts","parse","major","minor","extraFilter","prerelease","getMajorDatePoints","getPatchDatePoints","getPrereleaseDataPoints","opts","points","pointsByMappedVersion","mappedVersion","versionPoints","versionDatePoint","pointsByVersionByDate","p1","p2","instances","loadHistoryFile","historyFile","darkTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","lightTheme","maxDays","CardFrame","loaded","hasData","children","packageCardFrame","visibleCardFrame","noDataCardFrame","fadedCardFrame","packageCardContent","visibleCardContent","noDataCardContent","fadedCardContent","PackageCard","identifier","lastVersionFilter","setLastVersionFilter","showAsPercentage","setShowAsPercentage","historyReader","setHistoryReader","useEffect","get","reader","getDatePoints","packageDesc","header","headerLeft","headerText","packageName","headerControls","TooltipHost","IconButton","toggle","disabled","onRenderIcon","CalculatorPercentageIcon","checked","onClick","chartStyles","ReactLogoIcon","createSvgIcon","displayName","svg","classes","xmlns","viewBox","d","cx","cy","Brand","reactLogo","NavBar","mobileHeader","mobileHeaderContent","mobileBrand","nav","navContent","brand","Pivot","headersOnly","pivot","onLinkClick","item","window","scrollTo","behavior","onItemSelected","itemKey","items","PivotItem","Link","gitHubLink","underline","href","rel","ActionButton","gitHubTextButton","text","GitHubLogoIcon","gitHubLogo","gitHubIconButton","navItems","App","setVersionFilter","app","contentContainer","cardContainer","pkg","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2ada5937.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"versionsList\":\"VersionLegend_versionsList__1Nd9r\",\"versionsListItem\":\"VersionLegend_versionsListItem__3ZBuG\",\"versionColorIndicator\":\"VersionLegend_versionColorIndicator__3LkAB\",\"versionLabel\":\"VersionLegend_versionLabel__Ys0fe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"contentContainer\":\"App_contentContainer__3BvVB\",\"cardContainer\":\"App_cardContainer__2YSdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"chartContainer\":\"VersionDownloadChart_chartContainer__3BBDr\",\"placeholderContainer\":\"VersionDownloadChart_placeholderContainer__3zvnR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packageCardFrame\":\"PackageCard_packageCardFrame__37prK\",\"visibleCardFrame\":\"PackageCard_visibleCardFrame__3sw4n\",\"fadedCardFrame\":\"PackageCard_fadedCardFrame__h8you\",\"noDataCardFrame\":\"PackageCard_noDataCardFrame__9FLQg\",\"packageCardContent\":\"PackageCard_packageCardContent__3Kr50\",\"visibleCardContent\":\"PackageCard_visibleCardContent__4_7O-\",\"fadedCardContent\":\"PackageCard_fadedCardContent__1fKCN\",\"noDataCardContent\":\"PackageCard_noDataCardContent__2PBHC\",\"headerLeft\":\"PackageCard_headerLeft__udvRl\",\"header\":\"PackageCard_header__1bpM1\",\"headerText\":\"PackageCard_headerText__3etfm\",\"packageName\":\"PackageCard_packageName__3oAJu\",\"headerControls\":\"PackageCard_headerControls__3S0-z\",\"chartContainer\":\"PackageCard_chartContainer__2-gCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"NavBar_app__2ndwE\",\"contentContainer\":\"NavBar_contentContainer__1HrNg\",\"cardContainer\":\"NavBar_cardContainer__2-0S2\",\"nav\":\"NavBar_nav__kUiGN\",\"navSpacer\":\"NavBar_navSpacer__1qgrd\",\"navContent\":\"NavBar_navContent__WY6pJ\",\"reactLogo\":\"NavBar_reactLogo__31oQg\",\"gitHubLink\":\"NavBar_gitHubLink__129fm\",\"gitHubIconStroke\":\"NavBar_gitHubIconStroke__fEafs\",\"gitHubIconButton\":\"NavBar_gitHubIconButton__B7oPV\",\"gitHubTextButton\":\"NavBar_gitHubTextButton__31Ju7\",\"gitHubLogo\":\"NavBar_gitHubLogo__2VQ1M\",\"mobileHeader\":\"NavBar_mobileHeader__2NWsD\",\"mobileHeaderContent\":\"NavBar_mobileHeaderContent__3s4_A\",\"mobileBrand\":\"NavBar_mobileBrand__3wO91\",\"brand\":\"NavBar_brand__2ilIm\",\"pivot\":\"NavBar_pivot__2oWsQ\"};","import type {\n  AreaProps,\n  CartesianGridProps,\n  ResponsiveContainerProps,\n  TooltipProps,\n  XAxisProps,\n  YAxisProps,\n} from \"recharts\";\n\ntype AnimationTimingProps = \"animationDuration\" | \"animationEasing\";\ntype DimensionProps = \"width\" | \"height\";\ntype PaddingProps = \"padding\";\ntype StrokeProps = \"stroke\" | \"strokeDasharray\" | \"strokeOpacity\";\ntype TickProps =\n  | \"tick\"\n  | \"tickCount\"\n  | \"tickLine\"\n  | \"tickSize\"\n  | \"tickMargin\"\n  | \"minTickGap\";\n\nexport type VersionDownloadChartStyle = {\n  area: Pick<AreaProps, DimensionProps | \"isAnimationActive\">;\n  responsiveContainer: Pick<ResponsiveContainerProps, DimensionProps>;\n  grid: Pick<CartesianGridProps, DimensionProps | StrokeProps>;\n  xAxis: Pick<XAxisProps, DimensionProps | PaddingProps | TickProps>;\n  yAxis: Pick<YAxisProps, DimensionProps | PaddingProps | TickProps>;\n  tooltip: Pick<TooltipProps<string, number>, AnimationTimingProps>;\n};\n\nconst styles: VersionDownloadChartStyle = {\n  area: {\n    isAnimationActive: false,\n  },\n  responsiveContainer: {\n    width: \"100%\",\n    height: 230,\n  },\n  grid: {\n    strokeDasharray: \"5 5\",\n    stroke: \"black\",\n  },\n  xAxis: {\n    height: 32,\n    tickLine: false,\n    tickMargin: 10,\n  },\n  yAxis: {\n    width: 72,\n    tickLine: false,\n    tickMargin: 10,\n    tickSize: 0,\n    tickCount: 5,\n  },\n  tooltip: {\n    animationDuration: 300,\n    animationEasing: \"ease-in-out\",\n  },\n};\n\nexport default styles;\n","import semver from \"semver\";\n\n/** Takes raw input, and [], to be factored into an accumulated record. */\nexport type MapToMajor = (version: string) => string;\n\nexport type PackageDescription = {\n  /** User-visible name of the package */\n  friendlyName: string;\n\n  /** Filter of package versions to collect and show */\n  versionFilter: (version: string) => boolean;\n\n  /** Allows relabeling specific versions to a user-friendly value */\n  versionLabeler?: (version: string) => string;\n};\n\nfunction canaryVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"canary\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<canary>canary.\\d+)$/);\n  if (match) {\n    return match.groups!.canary;\n  }\n\n  return version;\n}\n\nfunction nightlyHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<hash>[0-9a-f]{1,7})[0-9a-f]*$/);\n  if (match) {\n    return `nightly@${match.groups!.hash}`;\n  }\n\n  return version;\n}\n\nfunction nightlyDateHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(\n    /^0\\.0\\.0-(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})-\\d{4}-[0-9a-f]+$/\n  );\n\n  if (match) {\n    const year = parseInt(match.groups!.year, 10);\n    const month = parseInt(match.groups!.month, 10);\n    const day = parseInt(match.groups!.day, 10);\n\n    const date = new Date(year, month - 1, day);\n\n    return `nightly@${date.toLocaleDateString(\"en-US\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n    })}`;\n  }\n\n  return version;\n}\n\nconst isNightly = (v: string) => semver.lt(v, \"0.0.0\");\nconst minVersion = (v: string, min: string) =>\n  semver.gte(v, `${min}.0`, {\n    includePrerelease: true,\n  });\n\nconst packagesLiteral = {\n  \"@types/react-native\": {\n    friendlyName: \"DefinitelyTyped Typings\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\"),\n  },\n  \"react-native\": {\n    friendlyName: \"React Native\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyDateHashVersionLabeler,\n  },\n  \"react-native-macos\": {\n    friendlyName: \"React Native macOS\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-web\": {\n    friendlyName: \"React Native Web\",\n    versionFilter: (v: string) => minVersion(v, \"0.11\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-windows\": {\n    friendlyName: \"React Native Windows\",\n    versionFilter: (v: string) =>\n      (minVersion(v, \"0.63\") || isNightly(v)) && v !== \"1.0.0\",\n    versionLabeler: canaryVersionLabeler,\n  },\n};\n\nexport const packages: Record<PackageIdentifier, PackageDescription> =\n  packagesLiteral;\n\nexport type PackageIdentifier = keyof typeof packagesLiteral;\n","import randomSeed from \"random-seed\";\n\nexport type AvoidToken = {\n  adjacentHue: number;\n  allHues: number[];\n};\n\n/**\n * Generates a color with random distribution, stable for a given semver\n * version. Allows passing an `avoidToken` generated by a previous color, to avoid a color similar\n * to it.\n *\n * * Derived from:\n * - http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n * - https://github.com/devongovett/color-generator\n */\nexport default function generateColor(\n  version: string,\n  avoidToken?: AvoidToken\n): { color: string; avoidToken: AvoidToken } {\n  const adjacentHueThreshold = 0.25;\n  const allHueThreshold = 0.05;\n\n  const goldenRatio = 0.618033988749895;\n\n  const randomGenerator = randomSeed.create(version);\n  let hue: number;\n  let triesRemaining = 100;\n\n  do {\n    hue = randomGenerator.random();\n    hue += goldenRatio;\n    hue %= 1;\n  } while (\n    avoidToken &&\n    --triesRemaining > 0 &&\n    (hueDifference(hue, avoidToken.adjacentHue) < adjacentHueThreshold ||\n      avoidToken.allHues.find(\n        // eslint-disable-next-line no-loop-func\n        (otherHue) => hueDifference(hue, otherHue) < allHueThreshold\n      ))\n  );\n\n  const saturation = 0.6;\n  const value = 0.95;\n\n  const h = hue * 360;\n  const s = saturation * 100;\n  const v = value * 100;\n\n  return {\n    color: cssColorFromHsv(h, s, v),\n    avoidToken: {\n      adjacentHue: hue,\n      allHues: [...(avoidToken?.allHues ?? []), hue],\n    },\n  };\n}\n\nfunction cssColorFromHsv(hue: number, sat: number, val: number) {\n  const h = hue;\n  const l = ((2 - sat / 100) * val) / 2;\n  const s = (sat * val) / (l < 50 ? l * 2 : 200 - l * 2);\n\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n}\n\nfunction hueDifference(hue1: number, hue2: number) {\n  return Math.abs(((hue1 - hue2 + 0.5) % 1.0) - 0.5);\n}\n","// Adapted from https://github.com/microsoft/fluent-ui-react/blob/master/packages/react-theming/src/utilities/color.contrast.ts\n\nconst MAX_COLOR_ALPHA = 100;\n\n/**\n * Converts a valid CSS color string to an RGB color.\n * Note that hex colors *must* be prefixed with # to be considered valid.\n * Alpha in returned color defaults to 100.\n * Four and eight digit hex values (with alpha) are supported if the current browser supports them.\n */\nexport function cssColor(color?: string): IRGB | undefined {\n  if (!color) {\n    return undefined;\n  }\n\n  // Need to check the following valid color formats: RGB(A), HSL(A), hex, named color\n\n  // First check for well formatted RGB(A), HSL(A), and hex formats at the start.\n  // This is for perf (no creating an element) and catches the intentional \"transparent\" color\n  //   case early on.\n  const easyColor: IRGB | undefined =\n    _rgba(color) || _hex6(color) || _hex3(color) || _hsla(color);\n  if (easyColor) {\n    return easyColor;\n  }\n\n  // if the above fails, do the more expensive catch-all\n  return _browserCompute(color);\n}\n\n/**\n * Uses the browser's getComputedStyle() to determine what the passed-in color is.\n * This assumes _rgba, _hex6, _hex3, and _hsla have already been tried and all failed.\n * This works by attaching an element to the DOM, which may fail in server-side rendering\n *   or with headless browsers.\n */\nfunction _browserCompute(str: string): IRGB | undefined {\n  if (typeof document === \"undefined\") {\n    // don't throw an error when used server-side\n    return undefined;\n  }\n  const elem = document.createElement(\"div\");\n  elem.style.backgroundColor = str;\n  // This element must be attached to the DOM for getComputedStyle() to have a value\n  elem.style.position = \"absolute\";\n  elem.style.top = \"-9999px\";\n  elem.style.left = \"-9999px\";\n  elem.style.height = \"1px\";\n  elem.style.width = \"1px\";\n  document.body.appendChild(elem);\n  const eComputedStyle = getComputedStyle(elem);\n  const computedColor = eComputedStyle.backgroundColor;\n  document.body.removeChild(elem);\n  // computedColor is always an RGB(A) string, except for invalid colors in IE/Edge which return 'transparent'\n\n  // browsers return one of these if the color string is invalid,\n  // so need to differentiate between an actual error and intentionally passing in this color\n  if (computedColor === \"rgba(0, 0, 0, 0)\" || computedColor === \"transparent\") {\n    switch (str.trim()) {\n      // RGB and HSL were already checked at the start of the function\n      case \"transparent\":\n      case \"#0000\":\n      case \"#00000000\":\n        return { r: 0, g: 0, b: 0, a: 0 };\n    }\n    return undefined;\n  }\n\n  return _rgba(computedColor);\n}\n\n/**\n * If `str` is in valid `rgb()` or `rgba()` format, returns an RGB color (alpha defaults to 100).\n * Otherwise returns undefined.\n */\nfunction _rgba(str?: string | null): IRGB | undefined {\n  if (!str) {\n    return undefined;\n  }\n\n  const match = str.match(/^rgb(a?)\\(([\\d., ]+)\\)$/);\n  if (match) {\n    const hasAlpha = !!match[1];\n    const expectedPartCount = hasAlpha ? 4 : 3;\n    const parts = match[2].split(/ *, */).map(Number);\n\n    if (parts.length === expectedPartCount) {\n      return {\n        r: parts[0],\n        g: parts[1],\n        b: parts[2],\n        a: hasAlpha ? parts[3] * 100 : MAX_COLOR_ALPHA,\n      };\n    }\n  }\n}\n\n/**\n * Turn an rgb value into a string color value.  Either as an rgba if it has an alpha, or as a hex based\n * string\n *\n * @param r - red\n * @param g - green\n * @param b - blue\n * @param a - alpha, defaulted to 100 which is opaque\n */\nfunction rgbToString(r: number, g: number, b: number, a: number = 100): string {\n  if (a !== 100) {\n    return `rgba(${r}, ${g}, ${b}, ${a / 100})`;\n  }\n  return `#${rgb2hex(r, g, b)}`;\n}\n\n/**\n * Take an rgb numbers and turn them into hex values such as 'ffab04'\n *\n * @param r - red value\n * @param g - green value\n * @param b - blue value\n */\nexport function rgb2hex(r: number, g: number, b: number): string {\n  return [\n    _numberToPaddedHex(r),\n    _numberToPaddedHex(g),\n    _numberToPaddedHex(b),\n  ].join(\"\");\n}\n\nfunction _numberToPaddedHex(num: number): string {\n  const hex = num.toString(16);\n\n  return hex.length === 1 ? `0${hex}` : hex;\n}\n\n/**\n * If `str` is in `hsl()` or `hsla()` format, returns an RGB color (alpha defaults to 100).\n * Otherwise returns undefined.\n */\nfunction _hsla(str: string): IRGB | undefined {\n  const match = str.match(/^hsl(a?)\\(([\\d., ]+)\\)$/);\n  if (match) {\n    const hasAlpha = !!match[1];\n    const expectedPartCount = hasAlpha ? 4 : 3;\n    const parts = match[2].split(/ *, */).map(Number);\n\n    if (parts.length === expectedPartCount) {\n      const rgba = hsl2rgb({ h: parts[0], s: parts[1], l: parts[2] });\n      rgba.a = hasAlpha ? parts[3] * 100 : MAX_COLOR_ALPHA;\n      return rgba;\n    }\n  }\n}\n\n/**\n * If `str` is in valid 6-digit hex format *with* # prefix, returns an RGB color (with alpha 100).\n * Otherwise returns undefined.\n */\nfunction _hex6(str: string): IRGB | undefined {\n  if (str.startsWith(\"#\") && str.length === 7 && /^#[\\da-fA-F]{6}$/.test(str)) {\n    return {\n      r: parseInt(str.slice(1, 3), 16),\n      g: parseInt(str.slice(3, 5), 16),\n      b: parseInt(str.slice(5, 7), 16),\n      a: MAX_COLOR_ALPHA,\n    };\n  }\n}\n\n/**\n * If `str` is in valid 3-digit hex format *with* # prefix, returns an RGB color (with alpha 100).\n * Otherwise returns undefined.\n */\nfunction _hex3(str: string): IRGB | undefined {\n  if (str.startsWith(\"#\") && str.length === 4 && /^#[\\da-fA-F]{3}$/.test(str)) {\n    return {\n      r: parseInt(str[1] + str[1], 16),\n      g: parseInt(str[2] + str[2], 16),\n      b: parseInt(str[3] + str[3], 16),\n      a: MAX_COLOR_ALPHA,\n    };\n  }\n}\n\n/**\n * An rgb value, generally values range from 0 to 255\n */\ninterface IRGB {\n  r: number;\n  g: number;\n  b: number;\n  a?: number;\n}\n\ninterface IHSL {\n  /** hue, a value from 0 to 360 representing position on a color wheel */\n  h: number;\n\n  /** saturation value, ranges from 0 to 1 */\n  s: number;\n\n  /** lightness value, ranges from 0 to 1 */\n  l: number;\n}\n\n/**\n * Converts an rgb value directly into an hsl\n *\n * @param rgb - rgb value to convert to hsl.  Note that s/l have ranges from 0 to 1\n */\nexport function rgb2hsl(rgb: IRGB): IHSL {\n  const r = rgb.r / 255;\n  const g = rgb.g / 255;\n  const b = rgb.b / 255;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const delta = max - min;\n\n  // Calculate hue\n  let h: number = 0;\n  if (delta === 0) {\n    h = 0;\n  } else if (r === max) {\n    h = ((g - b) / delta) % 6;\n  } else if (g === max) {\n    h = (b - r) / delta + 2;\n  } else if (b === max) {\n    h = (r - g) / delta + 4;\n  }\n\n  h *= 60;\n\n  // hue is a wheel -- adjust for negatives\n  if (h < 0) {\n    h += 360;\n  }\n\n  // Calculate lightness\n  const l: number = (max + min) / 2;\n\n  // Calculate saturation\n  let s: number = 0;\n  if (delta !== 0) {\n    s = delta / (1 - Math.abs(2 * l - 1));\n  }\n\n  return { h, s, l };\n}\n\n/**\n * Given an IHSl will generate an IRGB with filled in r g and b\n *\n * @param hsl - hsl an IHSL with s and l being values from 0 to 1\n */\nexport function hsl2rgb(hsl: IHSL): IRGB {\n  const c: number = (1 - Math.abs(2 * hsl.l - 1)) * hsl.s;\n  const x: number = c * (1 - Math.abs(((hsl.h / 60) % 2) - 1));\n  const m: number = hsl.l - c / 2;\n\n  let r1: number = 0;\n  let g1: number = 0;\n  let b1: number = 0;\n\n  // different values of h\n  if (hsl.h < 60) {\n    r1 = c;\n    g1 = x;\n    b1 = 0;\n  } else if (hsl.h < 120) {\n    r1 = x;\n    g1 = c;\n    b1 = 0;\n  } else if (hsl.h < 180) {\n    r1 = 0;\n    g1 = c;\n    b1 = x;\n  } else if (hsl.h < 240) {\n    r1 = 0;\n    g1 = x;\n    b1 = c;\n  } else if (hsl.h < 300) {\n    r1 = x;\n    g1 = 0;\n    b1 = c;\n  } else {\n    r1 = c;\n    g1 = 0;\n    b1 = x;\n  }\n\n  return {\n    r: Math.round(255 * (r1 + m)),\n    g: Math.round(255 * (g1 + m)),\n    b: Math.round(255 * (b1 + m)),\n  };\n}\n\nexport type RequiredContrast = \"minimal\" | \"low\" | \"medium\" | \"high\";\n\nconst contrastDefaults: { [K in RequiredContrast]: number } = {\n  minimal: 2.0,\n  low: 3.0,\n  medium: 4.5,\n  high: 6.0,\n};\n\n/**\n * internal interface for caching contrast adjusted values.\n */\ninterface IContrastCache {\n  [bgColor: string]:\n    | {\n        [fgColor: string]: { [K in RequiredContrast]?: string } | undefined;\n      }\n    | undefined;\n}\n\n/**\n * An ISuggestionRange is an interface internal to the utilities in this file\n * It is primarily used to denote an acceptable range of relative luminance values\n */\ninterface ISuggestionRange {\n  min: number;\n  max: number;\n}\n\n/**\n * internal cache object\n */\nconst contrastCache: IContrastCache = {\n  rgbLookup: {},\n  cache: {},\n};\n\n/**\n * Take two strings representing a foreground and background color and potentially return a new foreground\n * color value which has an acceptable level of contrast with the background.  Because this can be expensive\n * it has an internal cache.\n * @param color - foreground color to potentially adjust for contrast\n * @param backgroundColor - background color to that the color needs to be shown on\n * @param desiredRatio - desired contrast ratio, defaults to 4.5\n */\nexport default function getContrastingColor(\n  color: string,\n  backgroundColor: string,\n  requiredContrast: RequiredContrast = \"medium\"\n): string {\n  const desiredRatio = contrastDefaults[requiredContrast];\n\n  const colorKey = JSON.stringify(color);\n  const backgroundColorKey = JSON.stringify(color);\n\n  /* eslint-disable no-multi-assign */\n  const bgEntry = (contrastCache[backgroundColorKey] =\n    contrastCache[backgroundColorKey] || {});\n  const fgEntry = (bgEntry[colorKey] = bgEntry[colorKey] || {});\n\n  if (!fgEntry[requiredContrast]) {\n    const fg = cssColor(color);\n    const newFg = adjustForContrast(\n      fg!,\n      cssColor(backgroundColor)!,\n      desiredRatio\n    );\n    fgEntry[requiredContrast] = rgbToString(newFg.r, newFg.g, newFg.b);\n  }\n\n  return fgEntry[requiredContrast]!;\n}\n\n/**\n * If possible, this will return a valid color to use to contrast against a background\n * The returned color attempts to maintain the chromaticity of the baseline color\n * If the desired ratio is unachievable white or black (dependent on target's relative luminance)\n * will be used\n *\n * @param textColor - a color value serving as a baseline for the tone (hue and saturation) to maintain\n * @param backgroundColor - the target to contrast against\n * @param desiredRatio - a desired contrast ratio (default is WCAG 2 AA standard for normal text)\n */\nfunction adjustForContrast(\n  baseline: IRGB,\n  target: IRGB,\n  desiredRatio: number = 4.5\n): IRGB {\n  const desiredRelLuminance: ISuggestionRange = getContrastingLuminanceRange(\n    target,\n    desiredRatio\n  );\n\n  // default to black or white\n  if (desiredRelLuminance.min === -1) {\n    // go to black\n    return { r: 0, g: 0, b: 0 };\n  }\n  if (desiredRelLuminance.min === 2) {\n    // go to white\n    return { r: 255, g: 255, b: 255 };\n  }\n\n  return contrastAdjust(baseline, desiredRelLuminance);\n}\n\n/**\n * TODO: There are some very interesting alternatives that can be explored\n *    Transforms into XYZ and LAB color spaces prior to scaling across a single dimension\n *    The problem is LAB is a larger color space and the projected values may not actually\n *    match desired relative luminance (still might be worth exploring)\n * TODO: If IColor is THE color interface we would like people to use, this should return it\n *\n * This is the core contrast adjusting algorithm\n * It will take an IRGB and return a transformed version\n * The new version will fall in the suggested relative luminance range\n * But will maintain the same tone (hue and saturation in this case)\n * It does so by transforming to an IHSL and searching across L values for a proper relative luminance\n *\n * @param color - a baseline color of which the returned color will maintain its hue and saturation\n * @param suggestedRelLuminance - a luminance range to use\n */\nfunction contrastAdjust(\n  color: IRGB,\n  suggestedRelLuminance: ISuggestionRange\n): IRGB {\n  // it is possible that the current color meets the suggested relative luminance\n  let currRelLuminance: number = relativeLuminance(color.r, color.g, color.b);\n  if (\n    currRelLuminance >= suggestedRelLuminance.min &&\n    currRelLuminance <= suggestedRelLuminance.max\n  ) {\n    return { r: color.r, g: color.g, b: color.b }; // make a copy to be safe\n  }\n\n  const hsl: IHSL = rgb2hsl(color);\n\n  // allow for a .01 (totally arbitrary) error bound, also a good cutting off point\n  // the error bound is safe as it will eventually result in an overcautios contrast ratio\n  // and cap from 0 to 1 as relative luminance is normalized against that range\n  const desiredMin: number = Math.max(suggestedRelLuminance.min - 0.01, 0);\n  const desiredMax: number = Math.min(suggestedRelLuminance.max + 0.01, 1);\n\n  // binary search across l values\n  let minL: number = currRelLuminance < desiredMin ? hsl.l : 0;\n  let maxL: number = currRelLuminance > desiredMax ? hsl.l : 1;\n  let rgbFinal: IRGB = { r: 0, g: 0, b: 0 }; // default to black\n\n  while (currRelLuminance < desiredMin || currRelLuminance > desiredMax) {\n    hsl.l = (maxL + minL) / 2;\n    rgbFinal = hsl2rgb(hsl);\n    currRelLuminance = relativeLuminance(rgbFinal.r, rgbFinal.g, rgbFinal.b);\n    if (currRelLuminance > desiredMax) {\n      maxL = (maxL + minL) / 2;\n    } else if (currRelLuminance < desiredMin) {\n      minL = (maxL + minL) / 2;\n    }\n  }\n\n  return rgbFinal;\n}\n\n/**\n * TODO: There are cases where the desired ratios can be achieved by going either lighter or darker\n *   It may be cool and not too much work to add an additional argument allowing consumers to choose\n *   get lighter or darker if that choice is there to be made\n *\n * Returns a suggested relative luminance range given a constant color\n * Note that it is possible that the desired ratio is unachievable\n * In these cases this function will return a [-1, -1] or [2, 2] range\n * The different ranges are used to default to white or black in the exposed adjustForContrast\n *\n * @param color - the constant IColor upon which we want to contrast with\n * @param desiredRatio - a contrast ratio (generally from some accesibility standard)\n */\nfunction getContrastingLuminanceRange(\n  color: IRGB,\n  desiredRatio: number\n): ISuggestionRange {\n  const relLum: number = relativeLuminance(color.r, color.g, color.b);\n\n  // when background is lighter, solve for darker\n  let suggestion: number = (relLum + 0.05) / desiredRatio - 0.05;\n  if (suggestion > 0 && suggestion < 1) {\n    return { min: 0, max: suggestion };\n  }\n\n  // when background is darker, text needs to be lighter\n  suggestion = desiredRatio * (relLum + 0.05) - 0.05;\n  if (suggestion < 1 && suggestion > 0) {\n    return { min: suggestion, max: 1 };\n  }\n\n  // We can't achieve the desired ratio\n  return { min: -1, max: -1 };\n}\n\n/**\n * Calculate the relative luminance which is how bright the color is from the perspective of\n * a human eye.  Blue is much darker than green for instance so (0, 0, 255) is perceived to be\n * significantly darker than (0, 255, 0).  This is used to calculate contrast ratios between\n * two colors to ensure text is readable.\n * @param r - standard red value 0 to 255\n * @param g - standard green value 0 to 255\n * @param b - standard blue value 0 to 255\n */\nexport function relativeLuminance(r: number, g: number, b: number): number {\n  // Formula defined by: http://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-contrast.html#contrast-ratiodef\n  // relative luminance: http://www.w3.org/TR/2008/REC-WCAG20-20081211/#relativeluminancedef\n\n  // get the effective radius for each color\n  const r1 = standardToLinear(r / 255);\n  const g1 = standardToLinear(g / 255);\n  const b1 = standardToLinear(b / 255);\n\n  // relative luminance adjusts the R/G/B values by modifiers for their perceived brightness\n  // to produce lightness result for how the eye perceives the color\n  return 0.2126 * r1 + 0.7152 * g1 + 0.0722 * b1;\n}\n\n/**\n * Converts an r, g, or b value in the sRGB color space to the corresponding value in linearRGB\n * This is necessary for relative luminance calculations\n * Formula defined at https://en.wikipedia.org/wiki/SRGB\n *\n * @param c - one of r g or b coming from sRGB\n */\nfunction standardToLinear(c: number): number {\n  return c <= 0.03928 ? c / 12.92 : Math.pow((c + 0.055) / 1.055, 2.4);\n}\n","import styles from \"./VersionTooltip.module.scss\";\nimport { ITheme, Text, ThemeContext, ThemeProvider } from \"@fluentui/react\";\n\nimport { TooltipProps } from \"recharts\";\nimport { Unit } from \"./VersionDownloadChart\";\nimport type { Payload } from \"recharts/types/component/DefaultTooltipContent\";\nimport getContrastingColor from \"./getContrastingColor\";\n\ntype DateTooltipProps = TooltipProps<number, number>;\n\nfunction formatCount(\n  count: number,\n  entry: Payload<number, number>,\n  measurementTransform: Unit | undefined\n): string {\n  const { versionCounts } = entry.payload as {\n    versionCounts: Record<string, number>;\n  };\n\n  const totalCount = Object.values(versionCounts).reduce((a, b) => a + b, 0);\n\n  const pct = ((count as number) / totalCount) * 100;\n\n  if (measurementTransform === \"percentage\") {\n    return `${Math.round(pct * 100) / 100}%`;\n  } else {\n    return `${count.toLocaleString()} (${Math.round(pct)}%)`;\n  }\n}\n\nfunction formatLabel(unixTime: number): string {\n  return new Date(unixTime).toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n  });\n}\n\nexport function createTooltipContent(\n  props: VersionProps\n): React.FC<DateTooltipProps> {\n  return (tooltipProps) => (\n    <VersionTooltipContent {...props} {...tooltipProps} />\n  );\n}\n\nexport type VersionProps = {\n  measurementTransform?: Unit;\n  theme?: ITheme;\n};\n\nexport const VersionTooltipContent: React.FC<\n  VersionProps & DateTooltipProps\n> = ({ label, payload, measurementTransform, theme }) => {\n  const reversedItems = [...(payload ?? [])];\n  reversedItems.reverse();\n\n  return (\n    <ThemeContext.Consumer>\n      {(contextTheme) => {\n        theme = theme ?? contextTheme;\n\n        const versionsList = reversedItems.length > 0 && (\n          <ul className={styles.versionsList}>\n            {reversedItems.map((entry, i) => {\n              const colorChipColor = theme\n                ? getContrastingColor(\n                    entry.color!,\n                    theme.semanticColors.bodyBackground,\n                    \"medium\"\n                  )\n                : entry.color!;\n\n              const formattedValue = formatCount(\n                entry.value!,\n                entry,\n                measurementTransform\n              );\n\n              return (\n                <li key={i} className={styles.versionsListItem}>\n                  <div\n                    className={styles.versionColorIndicator}\n                    style={{ backgroundColor: colorChipColor }}\n                  />\n                  <Text variant=\"small\" className={styles.versionLabel}>\n                    {entry.name}\n                  </Text>\n                  <Text variant=\"small\" className={styles.versionCount}>\n                    {formattedValue}\n                  </Text>\n                </li>\n              );\n            })}\n          </ul>\n        );\n\n        return (\n          <ThemeProvider\n            theme={theme}\n            className={styles.frame}\n            style={{\n              backgroundColor: (theme ?? contextTheme)?.semanticColors\n                .bodyBackground,\n            }}\n          >\n            <Text className={styles.date} variant=\"medium\">\n              {formatLabel(label!)}\n            </Text>\n            {versionsList}\n          </ThemeProvider>\n        );\n      }}\n    </ThemeContext.Consumer>\n  );\n};\n","import type { Payload } from \"recharts/types/component/DefaultLegendContent\";\nimport styles from \"./VersionLegend.module.scss\";\nimport getContrastingColor from \"./getContrastingColor\";\n\nimport { Text, ThemeContext } from \"@fluentui/react\";\n\nconst VersionLegend: React.FC<{ payload: Payload[] }> = ({ payload }) => {\n  return (\n    <ThemeContext.Consumer>\n      {(theme) => (\n        <ul className={styles.versionsList}>\n          {payload.map((entry) => {\n            const colorChipColor = theme\n              ? getContrastingColor(\n                  entry.color!,\n                  theme.semanticColors.bodyBackground,\n                  \"minimal\"\n                )\n              : entry.color!;\n            return (\n              <li key={entry.value} className={styles.versionsListItem}>\n                <div\n                  className={styles.versionColorIndicator}\n                  style={{ backgroundColor: colorChipColor }}\n                />\n                <Text variant=\"small\" className={styles.versionLabel}>\n                  {entry.value}\n                </Text>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </ThemeContext.Consumer>\n  );\n};\n\nexport default VersionLegend;\n","import React, { useState } from \"react\";\n\nimport generateColor, { AvoidToken } from \"./generateColor\";\nimport styleProps from \"./VersionDownloadChart.styles\";\nimport styles from \"./VersionDownloadChart.module.scss\";\nimport { createTooltipContent } from \"./VersionTooltip\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport type { HistoryPoint } from \"./HistoryReader\";\nimport { ITheme } from \"@fluentui/react\";\n\nimport { createPortal } from \"react-dom\";\nimport VersionLegend from \"./VersionLegend\";\n\nexport type Unit = \"totalDownloads\" | \"percentage\";\n\nexport type VersionLabeler = (version: string) => string;\n\nexport type VersionDownloadChartProps = {\n  /**\n   * Points to render\n   */\n  historyPoints: HistoryPoint[];\n\n  /**\n   * Maximum duration the graph will show, in days\n   */\n  maxDaysShown?: number;\n\n  /**\n   * Maximum total ticks to show for dates/times\n   */\n  maxTicks?: number;\n\n  /**\n   * Maximum separate versions show, attempting to show most popular versions.\n   */\n  maxVersionsShown?: number;\n\n  /**\n   * Whether to show the legend (defaults to true)\n   */\n  showLegend?: boolean;\n\n  /**\n   * Whether to show the tooltip (defaults to true)\n   */\n  showTooltip?: boolean;\n\n  /**\n   * The unit to show in the Y axis\n   */\n  unit?: Unit;\n\n  /**\n   * Allows relabeling versions\n   */\n  versionLabeler?: VersionLabeler;\n\n  /**\n   * Theme, used to ensure we have enough contrast.\n   */\n  theme?: ITheme;\n\n  /**\n   * Override the default provided theme for the tooltip\n   */\n  tooltipTheme?: ITheme;\n};\n\nconst VersionDownloadChart: React.FC<VersionDownloadChartProps> = ({\n  historyPoints,\n  maxDaysShown,\n  maxVersionsShown,\n  maxTicks,\n  showLegend,\n  showTooltip,\n  unit,\n  versionLabeler,\n  theme,\n  tooltipTheme,\n}) => {\n  const [legendElement, setLegendElement] = useState<HTMLDivElement | null>(\n    null\n  );\n\n  maxDaysShown = maxDaysShown ?? 30;\n  const datapoints = maxVersionsShown\n    ? filterTopN(historyPoints, maxVersionsShown, maxDaysShown)\n    : historyPoints;\n\n  datapoints.reverse();\n\n  const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\n    month: \"short\",\n    day: \"numeric\",\n  });\n\n  const allVersionsSet = new Set(datapoints.map((p) => p.version));\n  const chartAreas = createChartAreas([...allVersionsSet], versionLabeler);\n\n  const data: Array<{ date: number; versionCounts: Record<string, number> }> =\n    [];\n  for (const version of allVersionsSet) {\n    for (const measurePoint of datapoints) {\n      if (measurePoint.version === version) {\n        const datePoint = data.find((p) => p.date === measurePoint.date);\n        if (datePoint) {\n          datePoint.versionCounts[version] = measurePoint.count;\n        } else {\n          data.push({\n            date: measurePoint.date,\n            versionCounts: { [version]: measurePoint.count },\n          });\n        }\n      }\n    }\n  }\n  data.sort();\n\n  if (datapoints.length === 0) {\n    return (\n      <div\n        className={styles.placeholderContainer}\n        style={{\n          height: styleProps.responsiveContainer.height,\n        }}\n      ></div>\n    );\n  }\n\n  return (\n    <div className={styles.chartContainer}>\n      <ResponsiveContainer {...styleProps.responsiveContainer}>\n        <AreaChart\n          data={data}\n          reverseStackOrder\n          stackOffset={unit === \"percentage\" ? \"expand\" : \"none\"}\n        >\n          <XAxis\n            {...styleProps.xAxis}\n            tick={{ fill: theme?.semanticColors.bodyText }}\n            dataKey=\"date\"\n            type=\"number\"\n            scale=\"time\"\n            domain={[\"dataMin\", \"dataMax\"]}\n            tickFormatter={(unixTime) =>\n              dateTimeFormat.format(new Date(unixTime))\n            }\n            interval={0}\n            ticks={calculateDateTicks(\n              datapoints.map((p) => p.date),\n              maxTicks ?? 6\n            )}\n          />\n          <YAxis\n            {...styleProps.yAxis}\n            tick={{ fill: theme?.semanticColors.bodyText }}\n            type=\"number\"\n            {...(unit === \"percentage\"\n              ? {\n                  domain: [0, 1],\n                  tickFormatter: (count) => `${Math.round(count * 100)}%`,\n                }\n              : {\n                  domain: [\"auto\", \"auto\"],\n                  tickFormatter: (count) => count.toLocaleString(),\n                })}\n          />\n\n          {showTooltip !== false && (\n            <Tooltip\n              content={createTooltipContent({\n                measurementTransform: unit,\n                theme: tooltipTheme,\n              })}\n            />\n          )}\n          {showLegend !== false && legendElement && (\n            <Legend\n              height={0}\n              content={({ payload }) =>\n                createPortal(\n                  payload && <VersionLegend payload={payload} />,\n                  legendElement\n                )\n              }\n            />\n          )}\n\n          {chartAreas}\n\n          <CartesianGrid\n            {...styleProps.grid}\n            stroke={theme?.semanticColors.bodyText}\n            strokeOpacity={0.4}\n          />\n        </AreaChart>\n      </ResponsiveContainer>\n      <div ref={(el) => setLegendElement(el)} className={styles.legend} />\n    </div>\n  );\n};\n\nfunction createChartAreas(versions: string[], versionLabeler?: VersionLabeler) {\n  let latAvoidToken: AvoidToken | undefined = undefined;\n\n  // Need to generate colors in reverse order, to generate them bottom up with\n  // reverse stack order\n  const areas: JSX.Element[] = [];\n\n  for (let i = versions.length - 1; i >= 0; i--) {\n    const v = versions[i];\n    const { color, avoidToken } = generateColor(v, latAvoidToken);\n    latAvoidToken = avoidToken;\n\n    areas.unshift(\n      <Area\n        {...styleProps.area}\n        name={versionLabeler ? versionLabeler(v) : v}\n        key={v}\n        dataKey={(datapoint) => datapoint.versionCounts[v]}\n        stackId=\"1\"\n        stroke={color}\n        fill={color}\n        fillOpacity={1}\n      />\n    );\n  }\n\n  return areas;\n}\n\nfunction calculateDateTicks(dates: number[], maxTicks: number): number[] {\n  if (maxTicks === 0) {\n    return [];\n  }\n\n  const sortedDates = dates.sort();\n\n  const first = sortedDates[0];\n  const last = sortedDates[sortedDates.length - 1];\n\n  if (maxTicks === 1) {\n    return [first];\n  }\n\n  if (maxTicks === 2) {\n    return [first, last];\n  }\n\n  const dataDuration = last - first;\n  const dayDuration = 24 * 60 * 60 * 1000;\n  const weekDuration = 7 * dayDuration;\n\n  const maxInteriorTicks = maxTicks - 1;\n  let tickInterval = weekDuration;\n  while (Math.floor(dataDuration / tickInterval) > maxInteriorTicks) {\n    tickInterval *= 2;\n  }\n\n  const ticks = new Set([first]);\n  let nextTick = fromDayStart(first, tickInterval);\n\n  for (const date of sortedDates) {\n    if (date >= nextTick) {\n      ticks.add(date);\n      nextTick = fromDayStart(date, tickInterval);\n    }\n  }\n\n  return [...ticks];\n}\n\nfunction fromDayStart(date: number, duration: number): number {\n  const dayStart = new Date(date);\n  dayStart.setHours(0, 0, 0, 0);\n\n  return dayStart.getTime() + duration;\n}\n\nfunction filterTopN(\n  historyPoints: HistoryPoint[],\n  n: number,\n  windowInDays: number\n): HistoryPoint[] {\n  if (historyPoints.length === 0) {\n    return [];\n  }\n\n  const latestDate = historyPoints[historyPoints.length - 1].date;\n  const latestDay = new Date(latestDate).setHours(0, 0, 0, 0);\n\n  const earliestAllowableDate = latestDay - windowInDays * 24 * 60 * 60 * 1000;\n  const versionsInWindow: { [version: string]: number | undefined } = {};\n\n  for (const point of historyPoints) {\n    if (point.date >= earliestAllowableDate) {\n      const existingCount = versionsInWindow[point.version] ?? 0;\n      versionsInWindow[point.version] = existingCount + point.count;\n    }\n  }\n\n  const topVersions = new Set(\n    Object.entries(versionsInWindow)\n      .sort((a, b) => a[1]! - b[1]!)\n      .slice(-n)\n      .map(([version, _count]) => version)\n  );\n\n  return historyPoints.filter(\n    (p) => p.date >= earliestAllowableDate && topVersions.has(p.version)\n  );\n}\n\nexport default VersionDownloadChart;\n","import semver from \"semver\";\nimport {\n  PackageDescription,\n  PackageIdentifier,\n  packages,\n} from \"./PackageDescription\";\n\ntype HistoryFile = { points: HistoryPoint[] };\nexport type HistoryPoint = { date: number; version: string; count: number };\n\n/**\n * Allows reading from stored download history of an npm package\n */\nexport default class HistoryReader {\n  private readonly packageDescription: PackageDescription;\n  private readonly historyPoints: HistoryPoint[];\n\n  private majorDatePoints: HistoryPoint[] | null = null;\n  private patchDatePoints: HistoryPoint[] | null = null;\n  private prereleaseDatePoints: HistoryPoint[] | null = null;\n\n  private static instances: Partial<Record<PackageIdentifier, HistoryReader>> =\n    {};\n\n  private constructor(\n    packageIdentifier: PackageIdentifier,\n    historyPoints: HistoryPoint[]\n  ) {\n    this.packageDescription = packages[packageIdentifier];\n\n    this.historyPoints = historyPoints.filter((p) =>\n      this.packageDescription.versionFilter(p.version)\n    );\n  }\n\n  static async get(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryReader> {\n    if (!HistoryReader.instances[packageIdentifier]) {\n      const historyFile = await HistoryReader.loadHistoryFile(\n        packageIdentifier\n      );\n\n      HistoryReader.instances[packageIdentifier] = new HistoryReader(\n        packageIdentifier,\n        historyFile.points\n      );\n    }\n    return HistoryReader.instances[packageIdentifier]!;\n  }\n\n  private static async loadHistoryFile(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryFile> {\n    switch (packageIdentifier) {\n      case \"@types/react-native\":\n        return await import(\"./generated_assets/@types_react-native.json\");\n      case \"react-native\":\n        return await import(\"./generated_assets/react-native.json\");\n      case \"react-native-macos\":\n        return await import(\"./generated_assets/react-native-macos.json\");\n      case \"react-native-web\":\n        return await import(\"./generated_assets/react-native-web.json\");\n      case \"react-native-windows\":\n        return await import(\"./generated_assets/react-native-windows.json\");\n    }\n  }\n\n  getMajorDatePoints(): HistoryPoint[] {\n    if (!this.majorDatePoints) {\n      this.majorDatePoints = this.accumulateDatePoints({\n        versionMapper: this.mapToMajor,\n      });\n    }\n    return this.majorDatePoints;\n  }\n\n  private mapToMajor(version: string) {\n    const versionParts = semver.parse(version)!;\n\n    if (versionParts.major === 0) {\n      return `0.${versionParts.minor}`;\n    } else {\n      return `${versionParts.major}.0`;\n    }\n  }\n\n  getPatchDatePoints(): HistoryPoint[] {\n    if (!this.patchDatePoints) {\n      this.patchDatePoints = this.accumulateDatePoints();\n    }\n    return this.patchDatePoints;\n  }\n\n  getPrereleaseDataPoints(): HistoryPoint[] {\n    if (!this.prereleaseDatePoints) {\n      this.prereleaseDatePoints = this.accumulateDatePoints({\n        extraFilter: (point) => !!semver.prerelease(point.version),\n      });\n    }\n    return this.prereleaseDatePoints;\n  }\n\n  getDatePoints(\n    versionFilter: \"major\" | \"patch\" | \"prerelease\"\n  ): HistoryPoint[] {\n    switch (versionFilter) {\n      case \"major\":\n        return this.getMajorDatePoints();\n      case \"patch\":\n        return this.getPatchDatePoints();\n      case \"prerelease\":\n        return this.getPrereleaseDataPoints();\n    }\n  }\n\n  private accumulateDatePoints(opts?: {\n    versionMapper?: (v: string) => string;\n    extraFilter?: (point: HistoryPoint) => boolean;\n  }): HistoryPoint[] {\n    let points = this.historyPoints;\n\n    if (opts?.extraFilter) {\n      points = this.historyPoints.filter(opts.extraFilter);\n    }\n\n    if (opts?.versionMapper) {\n      const pointsByMappedVersion: Record<\n        string,\n        Array<{ date: number; count: number }> | undefined\n      > = {};\n\n      for (const point of points) {\n        const mappedVersion = opts.versionMapper(point.version);\n\n        const versionPoints = pointsByMappedVersion[mappedVersion] ?? [];\n        pointsByMappedVersion[mappedVersion] = versionPoints;\n\n        const versionDatePoint = versionPoints.find(\n          (p) => point.date === p.date\n        );\n\n        if (versionDatePoint) {\n          versionDatePoint.count += point.count;\n        } else {\n          versionPoints.push({ date: point.date, count: point.count });\n        }\n      }\n\n      points = [];\n      for (const [version, pointsByVersion] of Object.entries(\n        pointsByMappedVersion\n      )) {\n        const pointsByVersionByDate = pointsByVersion!.sort(\n          (p1, p2) => p1.date - p2.date\n        );\n        points.push(...pointsByVersionByDate.map((p) => ({ ...p, version })));\n      }\n    }\n\n    return points;\n  }\n}\n","import { createTheme } from \"@fluentui/react\";\n\nexport const darkTheme = createTheme({\n  palette: {\n    themePrimary: \"#79bdbc\",\n    themeLighterAlt: \"#f9fcfc\",\n    themeLighter: \"#e6f4f4\",\n    themeLight: \"#d2ebeb\",\n    themeTertiary: \"#a9d7d6\",\n    themeSecondary: \"#86c5c4\",\n    themeDarkAlt: \"#6daaa9\",\n    themeDark: \"#5c8f8f\",\n    themeDarker: \"#446a69\",\n    neutralLighterAlt: \"#302e2d\",\n    neutralLighter: \"#383735\",\n    neutralLight: \"#464443\",\n    neutralQuaternaryAlt: \"#4e4d4b\",\n    neutralQuaternary: \"#555352\",\n    neutralTertiaryAlt: \"#72706e\",\n    neutralTertiary: \"#c8c8c8\",\n    neutralSecondary: \"#d0d0d0\",\n    neutralPrimaryAlt: \"#dadada\",\n    neutralPrimary: \"#ffffff\",\n    neutralDark: \"#f4f4f4\",\n    black: \"#f8f8f8\",\n    white: \"#252423\",\n  },\n});\n\nexport const lightTheme = createTheme({\n  palette: {\n    themePrimary: \"#467877\",\n    themeLighterAlt: \"#f5fafa\",\n    themeLighter: \"#dae9e9\",\n    themeLight: \"#bbd6d6\",\n    themeTertiary: \"#82aead\",\n    themeSecondary: \"#568887\",\n    themeDarkAlt: \"#3f6c6b\",\n    themeDark: \"#355b5a\",\n    themeDarker: \"#274343\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#0d0d0c\",\n    neutralSecondary: \"#111110\",\n    neutralPrimaryAlt: \"#151514\",\n    neutralPrimary: \"#252423\",\n    neutralDark: \"#1e1d1c\",\n    black: \"#222120\",\n    white: \"#ffffff\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./PackageCard.module.scss\";\nimport chartStyles from \"./VersionDownloadChart.styles\";\n\nimport {\n  Text,\n  IconButton,\n  TooltipHost,\n  ThemeProvider,\n  ITheme,\n} from \"@fluentui/react\";\n\nimport { CalculatorPercentageIcon } from \"@fluentui/react-icons-mdl2\";\n\nimport { PackageIdentifier, packages } from \"./PackageDescription\";\n\nimport VersionDownloadChart from \"./VersionDownloadChart\";\nimport HistoryReader from \"./HistoryReader\";\nimport { lightTheme } from \"./Themes\";\n\nexport type VersionFilter = \"major\" | \"patch\" | \"prerelease\";\n\nexport type PackageCardProps = {\n  identifier: PackageIdentifier;\n  versionFilter: VersionFilter;\n  theme?: ITheme;\n  tooltipTheme?: ITheme;\n};\n\nfunction maxDays(versionFilter: VersionFilter) {\n  switch (versionFilter) {\n    case \"major\":\n      return 56;\n    case \"patch\":\n      return 28;\n    case \"prerelease\":\n      return 14;\n  }\n}\n\nconst PackageCard: React.FC<PackageCardProps> = ({\n  identifier,\n  versionFilter,\n  theme,\n  tooltipTheme,\n}) => {\n  const [lastVersionFilter, setLastVersionFilter] = useState(versionFilter);\n  const [showAsPercentage, setShowAsPercentage] = useState(false);\n  const [historyReader, setHistoryReader] = useState<HistoryReader | null>(\n    null\n  );\n\n  useEffect(() => {\n    if (!historyReader) {\n      (async () => {\n        const reader = await HistoryReader.get(identifier);\n        setHistoryReader(reader);\n      })();\n    }\n  }, [historyReader, identifier]);\n\n  useEffect(() => {\n    if (versionFilter !== lastVersionFilter) {\n      setShowAsPercentage(false);\n      setLastVersionFilter(versionFilter);\n    }\n  }, [versionFilter, lastVersionFilter]);\n\n  const historyPoints = historyReader?.getDatePoints(versionFilter);\n  const packageDesc = packages[identifier];\n\n  return (\n    <CardFrame\n      theme={theme ?? lightTheme}\n      loaded={!!historyPoints}\n      hasData={!!historyPoints && historyPoints.length > 0}\n    >\n      <div className={styles.header}>\n        <div className={styles.headerLeft} />\n        <div className={styles.headerText}>\n          <Text variant=\"large\" className={styles.packageName}>\n            {packageDesc.friendlyName}\n          </Text>\n          <Text variant=\"medium\">(Downloads/Week)</Text>\n        </div>\n        <div className={styles.headerControls}>\n          <TooltipHost content=\"Show as percentage\" theme={tooltipTheme}>\n            <IconButton\n              toggle\n              aria-label=\"Show as percentage\"\n              disabled={!historyPoints || historyPoints.length === 0}\n              onRenderIcon={() => <CalculatorPercentageIcon />}\n              checked={showAsPercentage}\n              onClick={() => setShowAsPercentage(!showAsPercentage)}\n            />\n          </TooltipHost>\n        </div>\n      </div>\n\n      {historyPoints ? (\n        <div className={styles.chartContainer}>\n          <VersionDownloadChart\n            historyPoints={historyPoints}\n            maxDaysShown={maxDays(versionFilter)}\n            maxVersionsShown={6}\n            unit={showAsPercentage ? \"percentage\" : \"totalDownloads\"}\n            versionLabeler={packageDesc.versionLabeler}\n            theme={theme}\n            tooltipTheme={tooltipTheme}\n          />\n        </div>\n      ) : (\n        <div style={{ height: chartStyles.responsiveContainer.height }} />\n      )}\n    </CardFrame>\n  );\n};\n\nconst CardFrame: React.FC<{\n  theme: ITheme;\n  loaded: boolean;\n  hasData: boolean;\n}> = ({ loaded, hasData, theme, children }) => {\n  return (\n    <ThemeProvider\n      theme={theme}\n      className={`${styles.packageCardFrame} ${\n        loaded\n          ? hasData\n            ? styles.visibleCardFrame\n            : styles.noDataCardFrame\n          : styles.fadedCardFrame\n      }`}\n    >\n      <div\n        className={`${styles.packageCardContent} ${\n          loaded\n            ? hasData\n              ? styles.visibleCardContent\n              : styles.noDataCardContent\n            : styles.fadedCardContent\n        }`}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default PackageCard;\n","import { createSvgIcon } from \"@fluentui/react-icons-mdl2\";\n\nconst ReactLogoIcon = createSvgIcon({\n  displayName: \"ReactLogoIcon\",\n  svg: ({ classes }) => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"120 2 600 600\"\n      className={classes.svg}\n    >\n      <g fill=\"#61DAFB\">\n        <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n        <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\n        <path d=\"M520.5 78.1z\" />\n      </g>\n    </svg>\n  ),\n});\n\nexport default ReactLogoIcon;\n","import { CSSProperties } from \"react\";\nimport styles from \"./NavBar.module.scss\";\n\nimport { darkTheme } from \"./Themes\";\n\nimport {\n  ActionButton,\n  IconButton,\n  ITheme,\n  Link,\n  Pivot,\n  PivotItem,\n  Text,\n  ThemeProvider,\n} from \"@fluentui/react\";\n\nimport { GitHubLogoIcon } from \"@fluentui/react-icons-mdl2\";\nimport ReactLogoIcon from \"./assets/ReactLogoIcon\";\n\nexport type NavBarProps<ItemKey extends string> = {\n  items: NavPivotItem<ItemKey>[];\n  onItemSelected?: (key: ItemKey) => void;\n  theme?: ITheme;\n};\n\nexport type NavPivotItem<ItemKey extends string> = {\n  label: string;\n  key: ItemKey;\n};\n\nconst Brand: React.FC<{ className: string }> = ({ className }) => (\n  <div className={className}>\n    <ReactLogoIcon className={styles.reactLogo} />\n    <Text variant=\"large\">React Native Versions</Text>\n  </div>\n);\n\nconst NavBar = <ItemKey extends string>(props: NavBarProps<ItemKey>) => {\n  const theme = props.theme ?? darkTheme;\n  const style: CSSProperties = {\n    backgroundColor: (props.theme ?? darkTheme).semanticColors.bodyBackground,\n  };\n  return (\n    <>\n      <ThemeProvider\n        className={styles.mobileHeader}\n        theme={theme}\n        style={style}\n      >\n        <div className={styles.mobileHeaderContent}>\n          <Brand className={styles.mobileBrand} />\n        </div>\n      </ThemeProvider>\n\n      <ThemeProvider className={styles.nav} theme={theme} style={style}>\n        <div className={styles.navContent}>\n          <Brand className={styles.brand} />\n\n          <Pivot\n            headersOnly\n            className={styles.pivot}\n            onLinkClick={(item) => {\n              window.scrollTo({ left: 0, top: 0, behavior: \"smooth\" });\n              if (props.onItemSelected) {\n                props.onItemSelected(item!.props.itemKey! as ItemKey);\n              }\n            }}\n          >\n            {props.items.map((p) => (\n              <PivotItem headerText={p.label} itemKey={p.key} />\n            ))}\n          </Pivot>\n\n          <Link\n            className={styles.gitHubLink}\n            underline={false}\n            href=\"https://github.com/rn-versions/rn-versions.github.io\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ActionButton\n              className={styles.gitHubTextButton}\n              text=\"Contribute\"\n              aria-label=\"Contribute\"\n              onRenderIcon={() => (\n                <GitHubLogoIcon className={styles.gitHubLogo} />\n              )}\n            />\n            <IconButton\n              className={styles.gitHubIconButton}\n              aria-label=\"Contribute\"\n              onRenderIcon={() => (\n                <GitHubLogoIcon className={styles.gitHubLogo} />\n              )}\n            />\n          </Link>\n        </div>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport PackageCard, { VersionFilter } from \"./PackageCard\";\n\nimport { PackageIdentifier } from \"./PackageDescription\";\nimport NavBar, { NavPivotItem } from \"./NavBar\";\nimport { darkTheme, lightTheme } from \"./Themes\";\n\nconst packages: Array<{ name: PackageIdentifier }> = [\n  { name: \"react-native\" },\n  { name: \"@types/react-native\" },\n  { name: \"react-native-windows\" },\n  { name: \"react-native-macos\" },\n  { name: \"react-native-web\" },\n];\n\nconst navItems: NavPivotItem<VersionFilter>[] = [\n  { label: \"Major\", key: \"major\" },\n  { label: \"Patch\", key: \"patch\" },\n  { label: \"Prerelease\", key: \"prerelease\" },\n];\n\nfunction App() {\n  const [versionFilter, setVersionFilter] = useState<VersionFilter>(\"major\");\n\n  return (\n    <div className={styles.app}>\n      <NavBar\n        items={navItems}\n        onItemSelected={(version) => setVersionFilter(version)}\n        theme={darkTheme}\n      />\n\n      <div className={styles.contentContainer}>\n        <div className={styles.cardContainer}>\n          {packages.map((pkg) => (\n            <PackageCard\n              identifier={pkg.name}\n              versionFilter={versionFilter}\n              key={pkg.name}\n              theme={lightTheme}\n              tooltipTheme={darkTheme}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./Global.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"VersionTooltip_frame__Ear68\",\"date\":\"VersionTooltip_date__3iXaR\",\"versionsList\":\"VersionTooltip_versionsList__pBT1t\",\"versionsListItem\":\"VersionTooltip_versionsListItem__9IYnp\",\"versionColorIndicator\":\"VersionTooltip_versionColorIndicator__16U_R\",\"versionLabel\":\"VersionTooltip_versionLabel__3hu-9\",\"versionCount\":\"VersionTooltip_versionCount__3pGiH\"};"],"sourceRoot":""}