{"version":3,"sources":["PackageCard.module.scss","NavBar.module.scss","VersionDownloadChart.styles.ts","PackageDescription.ts","generateColor.ts","VersionDownloadChart.tsx","HistoryReader.ts","PackageCard.tsx","assets/react-logo.svg","assets/github-logo.svg","NavBar.tsx","App.tsx","index.tsx","App.module.scss"],"names":["module","exports","styles","area","isAnimationActive","responsiveContainer","width","height","grid","strokeDasharray","xAxis","tickLine","tickMargin","minTickGap","yAxis","tickSize","tooltip","legend","wrapperStyle","position","bottom","nightlyHashVersionLabeler","version","match","groups","hash","isNightly","v","semver","lt","minVersion","min","gte","includePrerelease","packages","friendlyName","versionFilter","versionLabeler","year","parseInt","month","day","date","Date","toLocaleDateString","canary","cssColorFromHsv","hue","sat","val","l","s","Math","round","hueDifference","hue1","hue2","abs","VersionDownloadChart","historyPoints","maxDaysShown","maxVersionsShown","showLegend","showTooltip","measurementTransform","topRawDataPoints","n","windowInDays","latestDate","point","max","earliestAllowableDate","versionsInWindow","existingCount","find","newCount","count","push","topVersions","sort","a","b","slice","map","topVersionsInOrder","includes","filteredPoints","pointsByDate","Map","last","get","set","datesAscending","keys","pointsWithZero","topVersion","existingPoint","p","filterTopN","datapoints","points","totalCountByDate","prevTotal","transformToPercentage","dateTimeFormat","Intl","DateTimeFormat","allVersionsSet","Set","allVersionsArr","latAvoidToken","undefined","chartAreas","i","avoidToken","randomGenerator","randomSeed","create","triesRemaining","random","adjacentHue","allHues","otherHue","color","saturation","value","generateColor","name","key","dataKey","datapoint","versionCounts","stackId","stroke","fill","data","measurePoint","datePoint","length","style","display","alignItems","justifyContent","flexDirection","type","interval","scale","domain","tickFormatter","unixTime","format","toLocaleString","labelFormatter","formatter","_rnVersion","entry","pct","Object","values","payload","reduce","HistoryReader","packageIdentifier","packageDescription","majorDatePoints","patchDatePoints","prereleaseDatePoints","this","accumulateDatePoints","versionMapper","mapToMajor","versionParts","parse","major","minor","extraFilter","prerelease","getMajorDatePoints","getPatchDatePoints","getPrereleaseDataPoints","opts","filter","pointsByMappedVersion","mappedVersion","versionPoints","versionDatePoint","pointsByVersionByDate","p1","p2","entries","instances","loadHistoryFile","historyFile","maxDays","CardFrame","loaded","hasData","children","className","packageCardFrame","visibleCardFrame","noDataCardFrame","fadedCardFrame","packageCardContent","visibleCardContent","noDataCardContent","fadedCardContent","PackageCard","props","useState","lastVersionFilter","setLastVersionFilter","showAsPercentage","setShowAsPercentage","historyReader","setHistoryReader","useEffect","identifier","reader","getDatePoints","packageDesc","header","headerLeft","headerText","Text","variant","headerControls","Toggle","disabled","label","inlineLabel","checked","onChange","chartContainer","chartStyles","NavBar","nav","navContent","src","reactLogo","alt","Pivot","headersOnly","pivot","onLinkClick","item","onItemSelected","itemKey","items","PivotItem","Link","gitHubLink","underline","href","target","rel","ActionButton","gitHubTextButton","text","githubLogo","navSpacer","navItems","App","setVersionFilter","app","contentContainer","cardContainer","pkg","ReactDOM","render","StrictMode","document","body"],"mappings":"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","file":"static/js/main.6141373b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"packageCardFrame\":\"PackageCard_packageCardFrame__37prK\",\"visibleCardFrame\":\"PackageCard_visibleCardFrame__3sw4n\",\"fadedCardFrame\":\"PackageCard_fadedCardFrame__h8you\",\"noDataCardFrame\":\"PackageCard_noDataCardFrame__9FLQg\",\"packageCardContent\":\"PackageCard_packageCardContent__3Kr50\",\"visibleCardContent\":\"PackageCard_visibleCardContent__4_7O-\",\"fadedCardContent\":\"PackageCard_fadedCardContent__1fKCN\",\"noDataCardContent\":\"PackageCard_noDataCardContent__2PBHC\",\"headerLeft\":\"PackageCard_headerLeft__udvRl\",\"header\":\"PackageCard_header__1bpM1\",\"headerText\":\"PackageCard_headerText__3etfm\",\"headerControls\":\"PackageCard_headerControls__3S0-z\",\"chartContainer\":\"PackageCard_chartContainer__2-gCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"NavBar_app__2ndwE\",\"contentContainer\":\"NavBar_contentContainer__1HrNg\",\"cardContainer\":\"NavBar_cardContainer__2-0S2\",\"nav\":\"NavBar_nav__kUiGN\",\"navSpacer\":\"NavBar_navSpacer__1qgrd\",\"gitHubLink\":\"NavBar_gitHubLink__129fm\",\"gitHubTextButton\":\"NavBar_gitHubTextButton__31Ju7\",\"pivot\":\"NavBar_pivot__2oWsQ\",\"navContent\":\"NavBar_navContent__WY6pJ\",\"reactLogo\":\"NavBar_reactLogo__31oQg\",\"githubLogo\":\"NavBar_githubLogo__we27C\"};","import type {\n  AreaProps,\n  CartesianGridProps,\n  LegendProps,\n  ResponsiveContainerProps,\n  TooltipProps,\n  XAxisProps,\n  YAxisProps,\n} from \"recharts\";\n\nexport type VersionDownloadChartStyle = {\n  area: Partial<AreaProps>;\n  responsiveContainer: Partial<ResponsiveContainerProps>;\n  grid: Partial<CartesianGridProps>;\n  xAxis: Partial<XAxisProps>;\n  yAxis: Partial<YAxisProps>;\n  tooltip: Partial<TooltipProps>;\n  legend: Partial<LegendProps>;\n};\n\nconst styles: VersionDownloadChartStyle = {\n  area: {\n    isAnimationActive: false,\n  },\n  responsiveContainer: {\n    width: \"100%\",\n    height: 250,\n  },\n  grid: {\n    strokeDasharray: \"3 3\",\n  },\n  xAxis: {\n    height: 32,\n    tickLine: false,\n    tickMargin: 10,\n    minTickGap: 32,\n  },\n  yAxis: {\n    width: 72,\n    tickLine: false,\n    tickMargin: 10,\n    tickSize: 0,\n  },\n  tooltip: {},\n  legend: {\n    height: 24,\n    wrapperStyle: {\n      position: \"absolute\",\n      bottom: 0,\n    },\n  },\n};\n\nexport default styles;\n","import semver from \"semver\";\n\n/** Takes raw input, and [], to be factored into an accumulated record. */\nexport type MapToMajor = (version: string) => string;\n\nexport type PackageDescription = {\n  /** User-visible name of the package */\n  friendlyName: string;\n\n  /** Filter of package versions to collect and show */\n  versionFilter: (version: string) => boolean;\n\n  /** Allows relabeling specific versions to a user-friendly value */\n  versionLabeler?: (version: string) => string;\n};\n\nfunction canaryVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"canary\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<canary>canary.\\d+)$/);\n  if (match) {\n    return match.groups!.canary;\n  }\n\n  return version;\n}\n\nfunction nightlyHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<hash>[0-9a-f]{1,7})[0-9a-f]*$/);\n  if (match) {\n    return `nightly@${match.groups!.hash}`;\n  }\n\n  return version;\n}\n\nfunction nightlyDateHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(\n    /^0\\.0\\.0-(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})-\\d{4}-[0-9a-f]+$/\n  );\n\n  if (match) {\n    const year = parseInt(match.groups!.year, 10);\n    const month = parseInt(match.groups!.month, 10);\n    const day = parseInt(match.groups!.day, 10);\n\n    const date = new Date(year, month - 1, day);\n\n    return `nightly@${date.toLocaleDateString(\"en-US\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n    })}`;\n  }\n\n  return version;\n}\n\nconst isNightly = (v: string) => semver.lt(v, \"0.0.0\");\nconst minVersion = (v: string, min: string) =>\n  semver.gte(v, `${min}.0`, {\n    includePrerelease: true,\n  });\n\nconst packagesLiteral = {\n  \"@types/react-native\": {\n    friendlyName: \"DefinitelyTyped Typings\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\"),\n  },\n  \"react-native\": {\n    friendlyName: \"React Native\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyDateHashVersionLabeler,\n  },\n  \"react-native-macos\": {\n    friendlyName: \"React Native macOS\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-web\": {\n    friendlyName: \"React Native Web\",\n    versionFilter: (v: string) => minVersion(v, \"0.11\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-windows\": {\n    friendlyName: \"React Native Windows\",\n    versionFilter: (v: string) =>\n      (minVersion(v, \"0.63\") || isNightly(v)) && v !== \"1.0.0\",\n    versionLabeler: canaryVersionLabeler,\n  },\n};\n\nexport const packages: Record<PackageIdentifier, PackageDescription> =\n  packagesLiteral;\n\nexport type PackageIdentifier = keyof typeof packagesLiteral;\n","import randomSeed from \"random-seed\";\n\nexport type AvoidToken = {\n  adjacentHue: number;\n  allHues: number[];\n};\n\n/**\n * Generates a color with random distribution, stable for a given semver\n * version. Allows passing an `avoidToken` generated by a previous color, to avoid a color similar\n * to it.\n *\n * * Derived from:\n * - http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n * - https://github.com/devongovett/color-generator\n */\nexport default function generateColor(\n  version: string,\n  avoidToken?: AvoidToken\n): { color: string; avoidToken: AvoidToken } {\n  const adjacentHueThreshold = 0.25;\n  const allHueThreshold = 0.05;\n\n  const goldenRatio = 0.618033988749895;\n\n  const randomGenerator = randomSeed.create(version);\n  let hue: number;\n  let triesRemaining = 100;\n\n  do {\n    hue = randomGenerator.random();\n    hue += goldenRatio;\n    hue %= 1;\n  } while (\n    avoidToken &&\n    --triesRemaining > 0 &&\n    (hueDifference(hue, avoidToken.adjacentHue) < adjacentHueThreshold ||\n      avoidToken.allHues.find(\n        // eslint-disable-next-line no-loop-func\n        (otherHue) => hueDifference(hue, otherHue) < allHueThreshold\n      ))\n  );\n\n  const saturation = 0.9;\n  const value = 0.85;\n\n  const h = hue * 360;\n  const s = saturation * 100;\n  const v = value * 100;\n\n  return {\n    color: cssColorFromHsv(h, s, v),\n    avoidToken: {\n      adjacentHue: hue,\n      allHues: [...(avoidToken?.allHues ?? []), hue],\n    },\n  };\n}\n\nfunction cssColorFromHsv(hue: number, sat: number, val: number) {\n  const h = hue;\n  const l = ((2 - sat / 100) * val) / 2;\n  const s = (sat * val) / (l < 50 ? l * 2 : 200 - l * 2);\n\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n}\n\nfunction hueDifference(hue1: number, hue2: number) {\n  return Math.abs(((hue1 - hue2 + 0.5) % 1.0) - 0.5);\n}\n","import React from \"react\";\n\nimport generateColor, { AvoidToken } from \"./generateColor\";\nimport styles from \"./VersionDownloadChart.styles\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport type { HistoryPoint } from \"./HistoryReader\";\n\nexport type MeasurementTransform = \"totalDownloads\" | \"percentage\";\n\nexport type VersionLabeler = (version: string) => string;\n\nexport type VersionDownloadChartProps = {\n  /**\n   * Points to render\n   */\n  historyPoints: HistoryPoint[];\n\n  /**\n   * Maximum duration the graph will show, in days\n   */\n  maxDaysShown?: number;\n\n  /**\n   * Maximum separate versions show, attempting to show most popular versions.\n   */\n  maxVersionsShown?: number;\n\n  /**\n   * Whether to show the legend (defaults to true)\n   */\n  showLegend?: boolean;\n\n  /**\n   * Whether to show the tooltip (defaults to true)\n   */\n  showTooltip?: boolean;\n\n  /**\n   * Allows transforming raw measurements to a different unit\n   */\n  measurementTransform?: MeasurementTransform;\n\n  /**\n   * Allows relabeling versions\n   */\n  versionLabeler?: VersionLabeler;\n};\n\nconst VersionDownloadChart: React.FC<VersionDownloadChartProps> = ({\n  historyPoints,\n  maxDaysShown,\n  maxVersionsShown,\n  showLegend,\n  showTooltip,\n  measurementTransform,\n  versionLabeler,\n}) => {\n  const topRawDataPoints = maxVersionsShown\n    ? filterTopN(historyPoints, maxVersionsShown, maxDaysShown ?? 30)\n    : historyPoints;\n\n  const datapoints =\n    measurementTransform === \"percentage\"\n      ? transformToPercentage(topRawDataPoints)\n      : topRawDataPoints;\n\n  const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\n    month: \"short\",\n    day: \"2-digit\",\n  });\n\n  const allVersionsSet = new Set(datapoints.map((p) => p.version));\n  const allVersionsArr = [...allVersionsSet];\n\n  let latAvoidToken: AvoidToken | undefined = undefined;\n  const chartAreas = allVersionsArr.map((v, i) => {\n    const { color, avoidToken } = generateColor(v, latAvoidToken);\n    latAvoidToken = avoidToken;\n\n    return (\n      <Area\n        {...styles.area}\n        name={versionLabeler ? versionLabeler(v) : v}\n        key={v}\n        dataKey={(datapoint) => datapoint.versionCounts[v]}\n        stackId=\"1\"\n        stroke={color}\n        fill={color}\n      />\n    );\n  });\n\n  const data: Array<{ date: number; versionCounts: Record<string, number> }> =\n    [];\n  for (const version of allVersionsArr) {\n    for (const measurePoint of datapoints) {\n      if (measurePoint.version === version) {\n        const datePoint = data.find((p) => p.date === measurePoint.date);\n        if (datePoint) {\n          datePoint.versionCounts[version] = measurePoint.count;\n        } else {\n          data.push({\n            date: measurePoint.date,\n            versionCounts: { [version]: measurePoint.count },\n          });\n        }\n      }\n    }\n  }\n\n  if (datapoints.length === 0) {\n    return (\n      <div\n        style={{\n          height: styles.responsiveContainer.height,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      ></div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer {...styles.responsiveContainer}>\n      <AreaChart data={data}>\n        <XAxis\n          {...styles.xAxis}\n          dataKey=\"date\"\n          type=\"number\"\n          interval=\"preserveStartEnd\"\n          scale=\"time\"\n          domain={[\"dataMin\", \"dataMax\"]}\n          tickFormatter={(unixTime) =>\n            dateTimeFormat.format(new Date(unixTime))\n          }\n        />\n        <YAxis\n          {...styles.yAxis}\n          type=\"number\"\n          {...(measurementTransform === \"percentage\"\n            ? {\n                domain: [0, 1],\n                tickFormatter: (count) => `${Math.round(count * 100)}%`,\n              }\n            : {\n                domain: [\"auto\", \"auto\"],\n                tickFormatter: (count) => count.toLocaleString(),\n              })}\n        />\n        <CartesianGrid {...styles.grid} />\n\n        {showTooltip !== false && (\n          <Tooltip\n            {...styles.tooltip}\n            labelFormatter={(unixTime) =>\n              dateTimeFormat.format(new Date(unixTime))\n            }\n            formatter={(count, _rnVersion, entry) => {\n              const totalCount = (\n                Object.values(entry.payload.versionCounts) as number[]\n              ).reduce((a, b) => a + b, 0);\n\n              const pct = ((count as number) / totalCount) * 100;\n\n              if (measurementTransform === \"percentage\") {\n                return `${Math.round(pct * 100) / 100}%`;\n              } else {\n                return `${count.toLocaleString()} (${Math.round(pct)}%)`;\n              }\n            }}\n          />\n        )}\n\n        {showLegend !== false && <Legend {...styles.legend} />}\n\n        {chartAreas}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction transformToPercentage(points: HistoryPoint[]): HistoryPoint[] {\n  const totalCountByDate: Record<number, number | undefined> = {};\n\n  for (const point of points) {\n    const prevTotal = totalCountByDate[point.date] ?? 0;\n    totalCountByDate[point.date] = prevTotal + point.count;\n  }\n\n  return points.map((point) => ({\n    ...point,\n    count: point.count / totalCountByDate[point.date]!,\n  }));\n}\n\nfunction filterTopN(\n  historyPoints: HistoryPoint[],\n  n: number,\n  windowInDays: number\n): HistoryPoint[] {\n  let latestDate: number = 0;\n  for (const point of historyPoints) {\n    latestDate = Math.max(latestDate, point.date);\n  }\n\n  const earliestAllowableDate = latestDate - windowInDays * 24 * 60 * 60 * 1000;\n  const versionsInWindow: Array<{ version: string; count: number }> = [];\n\n  for (const point of historyPoints) {\n    if (point.date >= earliestAllowableDate) {\n      const existingCount = versionsInWindow.find(\n        (v) => v.version === point.version\n      );\n      const newCount = point.date < earliestAllowableDate ? 0 : point.count;\n\n      if (existingCount) {\n        existingCount.count += newCount;\n      } else {\n        versionsInWindow.push({ version: point.version, count: newCount });\n      }\n    }\n  }\n\n  const topVersions = versionsInWindow\n    .sort((a, b) => a.count - b.count)\n    .slice(-n)\n    .map((v) => v.version);\n\n  const topVersionsInOrder: string[] = [];\n  for (const point of historyPoints) {\n    if (\n      topVersions.includes(point.version) &&\n      !topVersionsInOrder.includes(point.version)\n    ) {\n      topVersionsInOrder.push(point.version);\n    }\n  }\n\n  const filteredPoints: HistoryPoint[] = [];\n  for (const point of historyPoints) {\n    if (topVersions.includes(point.version)) {\n      filteredPoints.push(point);\n    }\n  }\n\n  const pointsByDate: Map<\n    number,\n    { version: string; count: number }[] | undefined\n  > = new Map();\n  for (const point of filteredPoints) {\n    const last = pointsByDate.get(point.date) ?? [];\n    pointsByDate.set(point.date, [...last, point]);\n  }\n\n  const datesAscending = [...pointsByDate.keys()].sort();\n  const pointsWithZero: HistoryPoint[] = [];\n\n  for (const date of datesAscending) {\n    if (date < earliestAllowableDate) {\n      continue;\n    }\n\n    for (const topVersion of topVersionsInOrder) {\n      const existingPoint = pointsByDate\n        .get(date)!\n        .find((p) => p.version === topVersion);\n      if (existingPoint) {\n        pointsWithZero.push({ date, ...existingPoint });\n      } else {\n        pointsWithZero.push({ date, version: topVersion, count: 0 });\n      }\n    }\n  }\n\n  return pointsWithZero;\n}\n\nexport default VersionDownloadChart;\n","import semver from \"semver\";\nimport {\n  PackageDescription,\n  PackageIdentifier,\n  packages,\n} from \"./PackageDescription\";\n\ntype HistoryFile = { points: HistoryPoint[] };\nexport type HistoryPoint = { date: number; version: string; count: number };\n\n/**\n * Allows reading from stored download history of an npm package\n */\nexport default class HistoryReader {\n  private readonly packageDescription: PackageDescription;\n  private readonly historyPoints: HistoryPoint[];\n\n  private majorDatePoints: HistoryPoint[] | null = null;\n  private patchDatePoints: HistoryPoint[] | null = null;\n  private prereleaseDatePoints: HistoryPoint[] | null = null;\n\n  private static instances: Partial<Record<PackageIdentifier, HistoryReader>> =\n    {};\n\n  private constructor(\n    packageIdentifier: PackageIdentifier,\n    historyPoints: HistoryPoint[]\n  ) {\n    this.packageDescription = packages[packageIdentifier];\n    this.historyPoints = historyPoints;\n  }\n\n  static async get(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryReader> {\n    if (!HistoryReader.instances[packageIdentifier]) {\n      const historyFile = await HistoryReader.loadHistoryFile(\n        packageIdentifier\n      );\n\n      HistoryReader.instances[packageIdentifier] = new HistoryReader(\n        packageIdentifier,\n        historyFile.points\n      );\n    }\n    return HistoryReader.instances[packageIdentifier]!;\n  }\n\n  private static async loadHistoryFile(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryFile> {\n    switch (packageIdentifier) {\n      case \"@types/react-native\":\n        return await import(\"./generated_assets/@types_react-native.json\");\n      case \"react-native\":\n        return await import(\"./generated_assets/react-native.json\");\n      case \"react-native-macos\":\n        return await import(\"./generated_assets/react-native-macos.json\");\n      case \"react-native-web\":\n        return await import(\"./generated_assets/react-native-web.json\");\n      case \"react-native-windows\":\n        return await import(\"./generated_assets/react-native-windows.json\");\n    }\n  }\n\n  getMajorDatePoints(): HistoryPoint[] {\n    if (!this.majorDatePoints) {\n      this.majorDatePoints = this.accumulateDatePoints({\n        versionMapper: this.mapToMajor,\n      });\n    }\n    return this.majorDatePoints;\n  }\n\n  private mapToMajor(version: string) {\n    const versionParts = semver.parse(version)!;\n\n    if (versionParts.major === 0) {\n      return `0.${versionParts.minor}`;\n    } else {\n      return `${versionParts.major}.0`;\n    }\n  }\n\n  getPatchDatePoints(): HistoryPoint[] {\n    if (!this.patchDatePoints) {\n      this.patchDatePoints = this.accumulateDatePoints();\n    }\n    return this.patchDatePoints;\n  }\n\n  getPrereleaseDataPoints(): HistoryPoint[] {\n    if (!this.prereleaseDatePoints) {\n      this.prereleaseDatePoints = this.accumulateDatePoints({\n        extraFilter: (point) => !!semver.prerelease(point.version),\n      });\n    }\n    return this.prereleaseDatePoints;\n  }\n\n  getDatePoints(\n    versionFilter: \"major\" | \"patch\" | \"prerelease\"\n  ): HistoryPoint[] {\n    switch (versionFilter) {\n      case \"major\":\n        return this.getMajorDatePoints();\n      case \"patch\":\n        return this.getPatchDatePoints();\n      case \"prerelease\":\n        return this.getPrereleaseDataPoints();\n    }\n  }\n\n  private accumulateDatePoints(opts?: {\n    versionMapper?: (v: string) => string;\n    extraFilter?: (point: HistoryPoint) => boolean;\n  }): HistoryPoint[] {\n    let points: HistoryPoint[];\n\n    if (opts?.extraFilter) {\n      points = this.historyPoints.filter(\n        (point) =>\n          opts.extraFilter!(point) &&\n          this.packageDescription.versionFilter(point.version)\n      );\n    } else {\n      points = this.historyPoints.filter((point) =>\n        this.packageDescription.versionFilter(point.version)\n      );\n    }\n\n    if (opts?.versionMapper) {\n      const pointsByMappedVersion: Record<\n        string,\n        Array<{ date: number; count: number }> | undefined\n      > = {};\n\n      for (const point of points) {\n        const mappedVersion = opts.versionMapper(point.version);\n\n        const versionPoints = pointsByMappedVersion[mappedVersion] ?? [];\n        pointsByMappedVersion[mappedVersion] = versionPoints;\n\n        const versionDatePoint = versionPoints.find(\n          (p) => point.date === p.date\n        );\n\n        if (versionDatePoint) {\n          versionDatePoint.count += point.count;\n        } else {\n          versionPoints.push({ date: point.date, count: point.count });\n        }\n      }\n\n      points = [];\n      for (const [version, pointsByVersion] of Object.entries(\n        pointsByMappedVersion\n      )) {\n        const pointsByVersionByDate = pointsByVersion!.sort(\n          (p1, p2) => p1.date - p2.date\n        );\n        points.push(...pointsByVersionByDate.map((p) => ({ ...p, version })));\n      }\n    }\n\n    return points;\n  }\n}\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./PackageCard.module.scss\";\nimport chartStyles from \"./VersionDownloadChart.styles\";\n\nimport { Text, Toggle } from \"@fluentui/react\";\n\nimport { PackageIdentifier, packages } from \"./PackageDescription\";\n\nimport VersionDownloadChart from \"./VersionDownloadChart\";\nimport HistoryReader from \"./HistoryReader\";\n\nexport type VersionFilter = \"major\" | \"patch\" | \"prerelease\";\n\nexport type PackageCardProps = {\n  identifier: PackageIdentifier;\n  versionFilter: VersionFilter;\n};\n\nfunction maxDays(versionFilter: VersionFilter) {\n  switch (versionFilter) {\n    case \"major\":\n      return 60;\n    case \"patch\":\n      return 30;\n    case \"prerelease\":\n      return 14;\n  }\n}\n\nconst PackageCard: React.FC<PackageCardProps> = (props) => {\n  const [lastVersionFilter, setLastVersionFilter] = useState<\n    VersionFilter | undefined\n  >(props.versionFilter);\n  const [showAsPercentage, setShowAsPercentage] = useState<boolean>(false);\n  const [historyReader, setHistoryReader] = useState<HistoryReader | null>(\n    null\n  );\n\n  useEffect(() => {\n    (async () => {\n      const reader = await HistoryReader.get(props.identifier);\n      setHistoryReader(reader);\n    })();\n  }, [historyReader, props.identifier]);\n\n  const historyPoints = historyReader?.getDatePoints(props.versionFilter);\n\n  // Reset show-as-percentage if version filter changes\n  if (props.versionFilter !== lastVersionFilter) {\n    setShowAsPercentage(false);\n    setLastVersionFilter(props.versionFilter);\n  }\n\n  const packageDesc = packages[props.identifier];\n\n  return (\n    <CardFrame\n      loaded={!!historyPoints}\n      hasData={!!historyPoints && historyPoints.length > 0}\n    >\n      <div className={styles.header}>\n        <div className={styles.headerLeft} />\n        <div className={styles.headerText}>\n          <Text variant=\"xLarge\">{packageDesc.friendlyName}</Text>\n          <Text variant=\"large\">(Downloads/Week)</Text>\n        </div>\n        <div className={styles.headerControls}>\n          <Toggle\n            disabled={!historyPoints || historyPoints.length === 0}\n            label=\"%\"\n            inlineLabel={true}\n            checked={showAsPercentage}\n            onChange={() => setShowAsPercentage(!showAsPercentage)}\n          />\n        </div>\n      </div>\n\n      {historyPoints ? (\n        <div className={styles.chartContainer}>\n          <VersionDownloadChart\n            historyPoints={historyPoints}\n            maxDaysShown={maxDays(props.versionFilter)}\n            maxVersionsShown={7}\n            measurementTransform={\n              showAsPercentage ? \"percentage\" : \"totalDownloads\"\n            }\n            versionLabeler={packageDesc.versionLabeler}\n          />\n        </div>\n      ) : (\n        <div style={{ height: chartStyles.responsiveContainer.height }} />\n      )}\n    </CardFrame>\n  );\n};\n\nconst CardFrame: React.FC<{ loaded: boolean; hasData: boolean }> = ({\n  loaded,\n  hasData,\n  children,\n}) => {\n  return (\n    <div\n      className={`${styles.packageCardFrame} ${\n        loaded\n          ? hasData\n            ? styles.visibleCardFrame\n            : styles.noDataCardFrame\n          : styles.fadedCardFrame\n      }`}\n    >\n      <div\n        className={`${styles.packageCardContent} ${\n          loaded\n            ? hasData\n              ? styles.visibleCardContent\n              : styles.noDataCardContent\n            : styles.fadedCardContent\n        }`}\n      >\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default PackageCard;\n","export default __webpack_public_path__ + \"static/media/react-logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/github-logo.bd73fa36.svg\";","import React from \"react\";\nimport styles from \"./NavBar.module.scss\";\n\nimport reactLogo from \"./assets/react-logo.svg\";\nimport githubLogo from \"./assets/github-logo.svg\";\n\nimport { ActionButton, Link, Pivot, PivotItem, Text } from \"@fluentui/react\";\n\nexport type NavBarProps<ItemKey extends string> = {\n  items: NavPivotItem<ItemKey>[];\n  onItemSelected?: (key: ItemKey) => void;\n};\n\nexport type NavPivotItem<ItemKey extends string> = {\n  label: string;\n  key: ItemKey;\n};\n\nconst NavBar = <ItemKey extends string>(props: NavBarProps<ItemKey>) => (\n  <>\n    <div className={styles.nav}>\n      <div className={styles.navContent}>\n        <img src={reactLogo} alt=\"React Logo\" className={styles.reactLogo} />\n        <Text variant=\"xLarge\">RN Versions</Text>\n\n        <Pivot\n          headersOnly\n          className={styles.pivot}\n          onLinkClick={(item) =>\n            props.onItemSelected &&\n            props.onItemSelected(item!.props.itemKey! as ItemKey)\n          }\n        >\n          {props.items.map((p) => (\n            <PivotItem headerText={p.label} itemKey={p.key} />\n          ))}\n        </Pivot>\n\n        <Link\n          className={styles.gitHubLink}\n          underline={false}\n          href=\"https://github.com/rn-versions/rn-versions.github.io\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <ActionButton\n            className={styles.gitHubTextButton}\n            text=\"Contribute on GitHub\"\n          />\n          <img\n            src={githubLogo}\n            alt=\"GitHub Logo\"\n            className={styles.githubLogo}\n          />\n        </Link>\n      </div>\n    </div>\n    <div className={styles.navSpacer} />\n  </>\n);\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport PackageCard, { VersionFilter } from \"./PackageCard\";\n\nimport { PackageIdentifier } from \"./PackageDescription\";\nimport NavBar, { NavPivotItem } from \"./NavBar\";\n\nconst packages: PackageIdentifier[] = [\n  \"react-native\",\n  \"@types/react-native\",\n  \"react-native-windows\",\n  \"react-native-macos\",\n  \"react-native-web\",\n];\n\nconst navItems: NavPivotItem<VersionFilter>[] = [\n  { label: \"Major\", key: \"major\" },\n  { label: \"Patch\", key: \"patch\" },\n  { label: \"Prerelease\", key: \"prerelease\" },\n];\n\nfunction App() {\n  const [versionFilter, setVersionFilter] = useState<VersionFilter>(\"major\");\n\n  return (\n    <div className={styles.app}>\n      <NavBar\n        items={navItems}\n        onItemSelected={(version) => setVersionFilter(version)}\n      />\n\n      <div className={styles.contentContainer}>\n        <div className={styles.cardContainer}>\n          {packages.map((pkg) => (\n            <PackageCard\n              identifier={pkg}\n              versionFilter={versionFilter}\n              key={pkg}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"contentContainer\":\"App_contentContainer__3BvVB\",\"cardContainer\":\"App_cardContainer__2YSdb\"};"],"sourceRoot":""}