{"version":3,"sources":["App.module.scss","PackageCard.module.scss","NavBar.module.scss","VersionDownloadChart.styles.ts","PackageDescription.ts","generateColor.ts","VersionTooltip.tsx","VersionDownloadChart.tsx","HistoryReader.ts","Themes.ts","PackageCard.tsx","assets/ReactLogoIcon.tsx","NavBar.tsx","App.tsx","index.tsx","VersionTooltip.module.scss"],"names":["module","exports","styles","area","isAnimationActive","responsiveContainer","width","height","grid","strokeDasharray","xAxis","tickLine","tickMargin","minTickGap","yAxis","tickSize","tooltip","animationDuration","animationEasing","legend","wrapperStyle","position","bottom","nightlyHashVersionLabeler","version","match","groups","hash","isNightly","v","semver","lt","minVersion","min","gte","includePrerelease","packages","friendlyName","versionFilter","versionLabeler","year","parseInt","month","day","date","Date","toLocaleDateString","canary","cssColorFromHsv","hue","sat","val","l","s","Math","round","hueDifference","hue1","hue2","abs","VersionTooltipContent","label","payload","measurementTransform","theme","reversedItems","reverse","versionsList","length","className","map","entry","i","formattedValue","count","versionCounts","pct","Object","values","reduce","a","b","toLocaleString","formatCount","value","versionsListItem","versionColorIndicator","style","backgroundColor","color","Text","variant","versionLabel","name","versionCount","ThemeContext","Consumer","contextTheme","unixTime","ThemeProvider","frame","semanticColors","bodyBackground","VersionDownloadChart","props","historyPoints","maxDaysShown","maxVersionsShown","showLegend","showTooltip","tooltipTheme","topRawDataPoints","n","windowInDays","latestDate","point","max","earliestAllowableDate","versionsInWindow","existingCount","find","newCount","push","topVersions","sort","slice","topVersionsInOrder","includes","filteredPoints","pointsByDate","Map","last","get","set","datesAscending","keys","pointsWithZero","topVersion","existingPoint","p","filterTopN","datapoints","points","totalCountByDate","prevTotal","transformToPercentage","dateTimeFormat","Intl","DateTimeFormat","allVersionsSet","Set","allVersionsArr","latAvoidToken","undefined","chartAreas","avoidToken","randomGenerator","randomSeed","create","triesRemaining","random","adjacentHue","allHues","otherHue","saturation","generateColor","Area","key","dataKey","datapoint","stackId","stroke","fill","data","measurePoint","datePoint","display","alignItems","justifyContent","flexDirection","ResponsiveContainer","AreaChart","XAxis","type","interval","scale","domain","tickFormatter","format","YAxis","CartesianGrid","Tooltip","content","tooltipProps","Legend","HistoryReader","packageIdentifier","packageDescription","majorDatePoints","patchDatePoints","prereleaseDatePoints","this","accumulateDatePoints","versionMapper","mapToMajor","versionParts","parse","major","minor","extraFilter","prerelease","getMajorDatePoints","getPatchDatePoints","getPrereleaseDataPoints","opts","filter","pointsByMappedVersion","mappedVersion","versionPoints","versionDatePoint","pointsByVersionByDate","p1","p2","entries","instances","loadHistoryFile","historyFile","darkTheme","createTheme","palette","themePrimary","themeLighterAlt","themeLighter","themeLight","themeTertiary","themeSecondary","themeDarkAlt","themeDark","themeDarker","neutralLighterAlt","neutralLighter","neutralLight","neutralQuaternaryAlt","neutralQuaternary","neutralTertiaryAlt","neutralTertiary","neutralSecondary","neutralPrimaryAlt","neutralPrimary","neutralDark","black","white","lightTheme","maxDays","CardFrame","loaded","hasData","children","packageCardFrame","visibleCardFrame","noDataCardFrame","fadedCardFrame","packageCardContent","visibleCardContent","noDataCardContent","fadedCardContent","PackageCard","identifier","useState","lastVersionFilter","setLastVersionFilter","showAsPercentage","setShowAsPercentage","historyReader","setHistoryReader","useEffect","reader","getDatePoints","packageDesc","header","headerLeft","headerText","packageName","headerControls","TooltipHost","IconButton","toggle","disabled","onRenderIcon","CalculatorPercentageIcon","checked","onClick","chartContainer","chartStyles","ReactLogoIcon","createSvgIcon","displayName","svg","classes","xmlns","viewBox","d","cx","cy","r","Brand","reactLogo","NavBar","mobileHeader","mobileHeaderContent","mobileBrand","nav","navContent","brand","Pivot","headersOnly","pivot","onLinkClick","item","window","scrollTo","left","top","behavior","onItemSelected","itemKey","items","PivotItem","Link","gitHubLink","underline","href","target","rel","ActionButton","gitHubTextButton","text","GitHubLogoIcon","gitHubLogo","gitHubIconButton","navItems","App","setVersionFilter","app","contentContainer","cardContainer","pkg","ReactDOM","render","StrictMode","document","body"],"mappings":"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","file":"static/js/main.4d0b9840.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"contentContainer\":\"App_contentContainer__3BvVB\",\"cardContainer\":\"App_cardContainer__2YSdb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"packageCardFrame\":\"PackageCard_packageCardFrame__37prK\",\"visibleCardFrame\":\"PackageCard_visibleCardFrame__3sw4n\",\"fadedCardFrame\":\"PackageCard_fadedCardFrame__h8you\",\"noDataCardFrame\":\"PackageCard_noDataCardFrame__9FLQg\",\"packageCardContent\":\"PackageCard_packageCardContent__3Kr50\",\"visibleCardContent\":\"PackageCard_visibleCardContent__4_7O-\",\"fadedCardContent\":\"PackageCard_fadedCardContent__1fKCN\",\"noDataCardContent\":\"PackageCard_noDataCardContent__2PBHC\",\"headerLeft\":\"PackageCard_headerLeft__udvRl\",\"header\":\"PackageCard_header__1bpM1\",\"headerText\":\"PackageCard_headerText__3etfm\",\"packageName\":\"PackageCard_packageName__3oAJu\",\"headerControls\":\"PackageCard_headerControls__3S0-z\",\"chartContainer\":\"PackageCard_chartContainer__2-gCP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"NavBar_app__2ndwE\",\"contentContainer\":\"NavBar_contentContainer__1HrNg\",\"cardContainer\":\"NavBar_cardContainer__2-0S2\",\"nav\":\"NavBar_nav__kUiGN\",\"navSpacer\":\"NavBar_navSpacer__1qgrd\",\"navContent\":\"NavBar_navContent__WY6pJ\",\"reactLogo\":\"NavBar_reactLogo__31oQg\",\"gitHubLink\":\"NavBar_gitHubLink__129fm\",\"gitHubIconStroke\":\"NavBar_gitHubIconStroke__fEafs\",\"gitHubIconButton\":\"NavBar_gitHubIconButton__B7oPV\",\"gitHubTextButton\":\"NavBar_gitHubTextButton__31Ju7\",\"gitHubLogo\":\"NavBar_gitHubLogo__2VQ1M\",\"mobileHeader\":\"NavBar_mobileHeader__2NWsD\",\"mobileHeaderContent\":\"NavBar_mobileHeaderContent__3s4_A\",\"mobileBrand\":\"NavBar_mobileBrand__3wO91\",\"brand\":\"NavBar_brand__2ilIm\",\"pivot\":\"NavBar_pivot__2oWsQ\"};","import type {\n  AreaProps,\n  CartesianGridProps,\n  LegendProps,\n  ResponsiveContainerProps,\n  TooltipProps,\n  XAxisProps,\n  YAxisProps,\n} from \"recharts\";\n\nexport type VersionDownloadChartStyle = {\n  area: Pick<AreaProps, \"isAnimationActive\">;\n  responsiveContainer: Pick<ResponsiveContainerProps, \"width\" | \"height\">;\n  grid: Pick<CartesianGridProps, \"strokeDasharray\">;\n  xAxis: Pick<\n    XAxisProps,\n    \"width\" | \"height\" | \"tickLine\" | \"tickSize\" | \"tickMargin\" | \"minTickGap\"\n  >;\n  yAxis: Pick<\n    YAxisProps,\n    \"width\" | \"height\" | \"tickLine\" | \"tickSize\" | \"tickMargin\" | \"minTickGap\"\n  >;\n  tooltip: Pick<\n    TooltipProps<string, number>,\n    \"animationDuration\" | \"animationEasing\"\n  >;\n  legend: Pick<LegendProps, \"height\" | \"wrapperStyle\">;\n};\n\nconst styles: VersionDownloadChartStyle = {\n  area: {\n    isAnimationActive: false,\n  },\n  responsiveContainer: {\n    width: \"100%\",\n    height: 250,\n  },\n  grid: {\n    strokeDasharray: \"3 3\",\n  },\n  xAxis: {\n    height: 32,\n    tickLine: false,\n    tickMargin: 10,\n    minTickGap: 32,\n  },\n  yAxis: {\n    width: 72,\n    tickLine: false,\n    tickMargin: 10,\n    tickSize: 0,\n  },\n  tooltip: {\n    animationDuration: 300,\n    animationEasing: \"ease-in-out\",\n  },\n  legend: {\n    height: 24,\n    wrapperStyle: {\n      position: \"absolute\",\n      bottom: 0,\n    },\n  },\n};\n\nexport default styles;\n","import semver from \"semver\";\n\n/** Takes raw input, and [], to be factored into an accumulated record. */\nexport type MapToMajor = (version: string) => string;\n\nexport type PackageDescription = {\n  /** User-visible name of the package */\n  friendlyName: string;\n\n  /** Filter of package versions to collect and show */\n  versionFilter: (version: string) => boolean;\n\n  /** Allows relabeling specific versions to a user-friendly value */\n  versionLabeler?: (version: string) => string;\n};\n\nfunction canaryVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"canary\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<canary>canary.\\d+)$/);\n  if (match) {\n    return match.groups!.canary;\n  }\n\n  return version;\n}\n\nfunction nightlyHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(/^0\\.0\\.0-(?<hash>[0-9a-f]{1,7})[0-9a-f]*$/);\n  if (match) {\n    return `nightly@${match.groups!.hash}`;\n  }\n\n  return version;\n}\n\nfunction nightlyDateHashVersionLabeler(version: string): string {\n  if (version === \"0.0\") {\n    return \"nightly\";\n  }\n\n  const match = version.match(\n    /^0\\.0\\.0-(?<year>\\d{4})(?<month>\\d{2})(?<day>\\d{2})-\\d{4}-[0-9a-f]+$/\n  );\n\n  if (match) {\n    const year = parseInt(match.groups!.year, 10);\n    const month = parseInt(match.groups!.month, 10);\n    const day = parseInt(match.groups!.day, 10);\n\n    const date = new Date(year, month - 1, day);\n\n    return `nightly@${date.toLocaleDateString(\"en-US\", {\n      day: \"2-digit\",\n      month: \"2-digit\",\n    })}`;\n  }\n\n  return version;\n}\n\nconst isNightly = (v: string) => semver.lt(v, \"0.0.0\");\nconst minVersion = (v: string, min: string) =>\n  semver.gte(v, `${min}.0`, {\n    includePrerelease: true,\n  });\n\nconst packagesLiteral = {\n  \"@types/react-native\": {\n    friendlyName: \"DefinitelyTyped Typings\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\"),\n  },\n  \"react-native\": {\n    friendlyName: \"React Native\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyDateHashVersionLabeler,\n  },\n  \"react-native-macos\": {\n    friendlyName: \"React Native macOS\",\n    versionFilter: (v: string) => minVersion(v, \"0.63\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-web\": {\n    friendlyName: \"React Native Web\",\n    versionFilter: (v: string) => minVersion(v, \"0.11\") || isNightly(v),\n    versionLabeler: nightlyHashVersionLabeler,\n  },\n  \"react-native-windows\": {\n    friendlyName: \"React Native Windows\",\n    versionFilter: (v: string) =>\n      (minVersion(v, \"0.63\") || isNightly(v)) && v !== \"1.0.0\",\n    versionLabeler: canaryVersionLabeler,\n  },\n};\n\nexport const packages: Record<PackageIdentifier, PackageDescription> =\n  packagesLiteral;\n\nexport type PackageIdentifier = keyof typeof packagesLiteral;\n","import randomSeed from \"random-seed\";\n\nexport type AvoidToken = {\n  adjacentHue: number;\n  allHues: number[];\n};\n\n/**\n * Generates a color with random distribution, stable for a given semver\n * version. Allows passing an `avoidToken` generated by a previous color, to avoid a color similar\n * to it.\n *\n * * Derived from:\n * - http://martin.ankerl.com/2009/12/09/how-to-create-random-colors-programmatically/\n * - https://github.com/devongovett/color-generator\n */\nexport default function generateColor(\n  version: string,\n  avoidToken?: AvoidToken\n): { color: string; avoidToken: AvoidToken } {\n  const adjacentHueThreshold = 0.25;\n  const allHueThreshold = 0.05;\n\n  const goldenRatio = 0.618033988749895;\n\n  const randomGenerator = randomSeed.create(version);\n  let hue: number;\n  let triesRemaining = 100;\n\n  do {\n    hue = randomGenerator.random();\n    hue += goldenRatio;\n    hue %= 1;\n  } while (\n    avoidToken &&\n    --triesRemaining > 0 &&\n    (hueDifference(hue, avoidToken.adjacentHue) < adjacentHueThreshold ||\n      avoidToken.allHues.find(\n        // eslint-disable-next-line no-loop-func\n        (otherHue) => hueDifference(hue, otherHue) < allHueThreshold\n      ))\n  );\n\n  const saturation = 1;\n  const value = 0.9;\n\n  const h = hue * 360;\n  const s = saturation * 100;\n  const v = value * 100;\n\n  return {\n    color: cssColorFromHsv(h, s, v),\n    avoidToken: {\n      adjacentHue: hue,\n      allHues: [...(avoidToken?.allHues ?? []), hue],\n    },\n  };\n}\n\nfunction cssColorFromHsv(hue: number, sat: number, val: number) {\n  const h = hue;\n  const l = ((2 - sat / 100) * val) / 2;\n  const s = (sat * val) / (l < 50 ? l * 2 : 200 - l * 2);\n\n  return `hsl(${h}, ${Math.round(s)}%, ${Math.round(l)}%)`;\n}\n\nfunction hueDifference(hue1: number, hue2: number) {\n  return Math.abs(((hue1 - hue2 + 0.5) % 1.0) - 0.5);\n}\n","import styles from \"./VersionTooltip.module.scss\";\nimport { ITheme, Text, ThemeContext, ThemeProvider } from \"@fluentui/react\";\n\nimport { TooltipProps } from \"recharts\";\nimport { MeasurementTransform } from \"./VersionDownloadChart\";\nimport type { Payload } from \"recharts/types/component/DefaultTooltipContent\";\n\ntype DateTooltipProps = TooltipProps<number, number>;\n\nfunction formatCount(\n  count: number,\n  entry: Payload<number, number>,\n  measurementTransform: MeasurementTransform | undefined\n): string {\n  const { versionCounts } = entry.payload as {\n    versionCounts: Record<string, number>;\n  };\n\n  const totalCount = Object.values(versionCounts).reduce((a, b) => a + b, 0);\n\n  const pct = ((count as number) / totalCount) * 100;\n\n  if (measurementTransform === \"percentage\") {\n    return `${Math.round(pct * 100) / 100}%`;\n  } else {\n    return `${count.toLocaleString()} (${Math.round(pct)}%)`;\n  }\n}\n\nfunction formatLabel(unixTime: number): string {\n  return new Date(unixTime).toLocaleDateString(\"en-US\", {\n    month: \"short\",\n    day: \"2-digit\",\n  });\n}\n\nexport function createTooltipContent(\n  props: VersionProps\n): React.FC<DateTooltipProps> {\n  return (tooltipProps) => (\n    <VersionTooltipContent {...props} {...tooltipProps} />\n  );\n}\n\nexport type VersionProps = {\n  measurementTransform?: MeasurementTransform;\n  theme?: ITheme;\n};\n\nexport const VersionTooltipContent: React.FC<\n  VersionProps & DateTooltipProps\n> = ({ label, payload, measurementTransform, theme }) => {\n  const reversedItems = [...(payload ?? [])];\n  reversedItems.reverse();\n\n  const versionsList = reversedItems.length > 0 && (\n    <ul className={styles.versionsList}>\n      {reversedItems.map((entry, i) => {\n        const formattedValue = formatCount(\n          entry.value!,\n          entry,\n          measurementTransform\n        );\n\n        return (\n          <li key={i} className={styles.versionsListItem}>\n            <div\n              className={styles.versionColorIndicator}\n              style={{ backgroundColor: entry.color || \"#000\" }}\n            />\n            <Text variant=\"small\" className={styles.versionLabel}>\n              {entry.name}\n            </Text>\n            <Text variant=\"small\" className={styles.versionCount}>\n              {formattedValue}\n            </Text>\n          </li>\n        );\n      })}\n    </ul>\n  );\n\n  return (\n    <ThemeContext.Consumer>\n      {(contextTheme) => {\n        theme = theme ?? contextTheme;\n\n        return (\n          <ThemeProvider\n            theme={theme}\n            className={styles.frame}\n            style={{\n              backgroundColor: (theme ?? contextTheme)?.semanticColors\n                .bodyBackground,\n            }}\n          >\n            <Text className={styles.date} variant=\"medium\">\n              {formatLabel(label!)}\n            </Text>\n            {versionsList}\n          </ThemeProvider>\n        );\n      }}\n    </ThemeContext.Consumer>\n  );\n};\n","import React from \"react\";\n\nimport generateColor, { AvoidToken } from \"./generateColor\";\nimport styles from \"./VersionDownloadChart.styles\";\nimport { createTooltipContent } from \"./VersionTooltip\";\n\nimport {\n  AreaChart,\n  Area,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Legend,\n} from \"recharts\";\nimport type { HistoryPoint } from \"./HistoryReader\";\nimport { ITheme } from \"@fluentui/react\";\n\nexport type MeasurementTransform = \"totalDownloads\" | \"percentage\";\n\nexport type VersionLabeler = (version: string) => string;\n\nexport type VersionDownloadChartProps = {\n  /**\n   * Points to render\n   */\n  historyPoints: HistoryPoint[];\n\n  /**\n   * Maximum duration the graph will show, in days\n   */\n  maxDaysShown?: number;\n\n  /**\n   * Maximum separate versions show, attempting to show most popular versions.\n   */\n  maxVersionsShown?: number;\n\n  /**\n   * Whether to show the legend (defaults to true)\n   */\n  showLegend?: boolean;\n\n  /**\n   * Whether to show the tooltip (defaults to true)\n   */\n  showTooltip?: boolean;\n\n  /**\n   * Allows transforming raw measurements to a different unit\n   */\n  measurementTransform?: MeasurementTransform;\n\n  /**\n   * Allows relabeling versions\n   */\n  versionLabeler?: VersionLabeler;\n\n  /**\n   * Override the default provided theme for the tooltip\n   */\n  tooltipTheme?: ITheme;\n};\n\nconst VersionDownloadChart: React.FC<VersionDownloadChartProps> = ({\n  historyPoints,\n  maxDaysShown,\n  maxVersionsShown,\n  showLegend,\n  showTooltip,\n  measurementTransform,\n  versionLabeler,\n  tooltipTheme,\n}) => {\n  const topRawDataPoints = maxVersionsShown\n    ? filterTopN(historyPoints, maxVersionsShown, maxDaysShown ?? 30)\n    : historyPoints;\n\n  const datapoints =\n    measurementTransform === \"percentage\"\n      ? transformToPercentage(topRawDataPoints)\n      : topRawDataPoints;\n\n  const dateTimeFormat = new Intl.DateTimeFormat(\"en-US\", {\n    month: \"short\",\n    day: \"2-digit\",\n  });\n\n  const allVersionsSet = new Set(datapoints.map((p) => p.version));\n  const allVersionsArr = [...allVersionsSet];\n\n  let latAvoidToken: AvoidToken | undefined = undefined;\n  const chartAreas = allVersionsArr.map((v, i) => {\n    const { color, avoidToken } = generateColor(v, latAvoidToken);\n    latAvoidToken = avoidToken;\n\n    return (\n      <Area\n        {...styles.area}\n        name={versionLabeler ? versionLabeler(v) : v}\n        key={v}\n        dataKey={(datapoint) => datapoint.versionCounts[v]}\n        stackId=\"1\"\n        stroke={color}\n        fill={color}\n      />\n    );\n  });\n\n  const data: Array<{ date: number; versionCounts: Record<string, number> }> =\n    [];\n  for (const version of allVersionsArr) {\n    for (const measurePoint of datapoints) {\n      if (measurePoint.version === version) {\n        const datePoint = data.find((p) => p.date === measurePoint.date);\n        if (datePoint) {\n          datePoint.versionCounts[version] = measurePoint.count;\n        } else {\n          data.push({\n            date: measurePoint.date,\n            versionCounts: { [version]: measurePoint.count },\n          });\n        }\n      }\n    }\n  }\n\n  if (datapoints.length === 0) {\n    return (\n      <div\n        style={{\n          height: styles.responsiveContainer.height,\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n          flexDirection: \"column\",\n        }}\n      ></div>\n    );\n  }\n\n  return (\n    <ResponsiveContainer {...styles.responsiveContainer}>\n      <AreaChart data={data}>\n        <XAxis\n          {...styles.xAxis}\n          dataKey=\"date\"\n          type=\"number\"\n          interval=\"preserveStartEnd\"\n          scale=\"time\"\n          domain={[\"dataMin\", \"dataMax\"]}\n          tickFormatter={(unixTime) =>\n            dateTimeFormat.format(new Date(unixTime))\n          }\n        />\n        <YAxis\n          {...styles.yAxis}\n          type=\"number\"\n          {...(measurementTransform === \"percentage\"\n            ? {\n                domain: [0, 1],\n                tickFormatter: (count) => `${Math.round(count * 100)}%`,\n              }\n            : {\n                domain: [\"auto\", \"auto\"],\n                tickFormatter: (count) => count.toLocaleString(),\n              })}\n        />\n        <CartesianGrid {...styles.grid} />\n\n        {showTooltip !== false && (\n          <Tooltip\n            content={createTooltipContent({\n              measurementTransform,\n              theme: tooltipTheme,\n            })}\n          />\n        )}\n        {showLegend !== false && <Legend {...styles.legend} />}\n\n        {chartAreas}\n      </AreaChart>\n    </ResponsiveContainer>\n  );\n};\n\nfunction transformToPercentage(points: HistoryPoint[]): HistoryPoint[] {\n  const totalCountByDate: Record<number, number | undefined> = {};\n\n  for (const point of points) {\n    const prevTotal = totalCountByDate[point.date] ?? 0;\n    totalCountByDate[point.date] = prevTotal + point.count;\n  }\n\n  return points.map((point) => ({\n    ...point,\n    count: point.count / totalCountByDate[point.date]!,\n  }));\n}\n\nfunction filterTopN(\n  historyPoints: HistoryPoint[],\n  n: number,\n  windowInDays: number\n): HistoryPoint[] {\n  let latestDate: number = 0;\n  for (const point of historyPoints) {\n    latestDate = Math.max(latestDate, point.date);\n  }\n\n  const earliestAllowableDate = latestDate - windowInDays * 24 * 60 * 60 * 1000;\n  const versionsInWindow: Array<{ version: string; count: number }> = [];\n\n  for (const point of historyPoints) {\n    if (point.date >= earliestAllowableDate) {\n      const existingCount = versionsInWindow.find(\n        (v) => v.version === point.version\n      );\n      const newCount = point.date < earliestAllowableDate ? 0 : point.count;\n\n      if (existingCount) {\n        existingCount.count += newCount;\n      } else {\n        versionsInWindow.push({ version: point.version, count: newCount });\n      }\n    }\n  }\n\n  const topVersions = versionsInWindow\n    .sort((a, b) => a.count - b.count)\n    .slice(-n)\n    .map((v) => v.version);\n\n  const topVersionsInOrder: string[] = [];\n  for (const point of historyPoints) {\n    if (\n      topVersions.includes(point.version) &&\n      !topVersionsInOrder.includes(point.version)\n    ) {\n      topVersionsInOrder.push(point.version);\n    }\n  }\n\n  const filteredPoints: HistoryPoint[] = [];\n  for (const point of historyPoints) {\n    if (topVersions.includes(point.version)) {\n      filteredPoints.push(point);\n    }\n  }\n\n  const pointsByDate: Map<\n    number,\n    { version: string; count: number }[] | undefined\n  > = new Map();\n  for (const point of filteredPoints) {\n    const last = pointsByDate.get(point.date) ?? [];\n    pointsByDate.set(point.date, [...last, point]);\n  }\n\n  const datesAscending = [...pointsByDate.keys()].sort();\n  const pointsWithZero: HistoryPoint[] = [];\n\n  for (const date of datesAscending) {\n    if (date < earliestAllowableDate) {\n      continue;\n    }\n\n    for (const topVersion of topVersionsInOrder) {\n      const existingPoint = pointsByDate\n        .get(date)!\n        .find((p) => p.version === topVersion);\n      if (existingPoint) {\n        pointsWithZero.push({ date, ...existingPoint });\n      } else {\n        pointsWithZero.push({ date, version: topVersion, count: 0 });\n      }\n    }\n  }\n\n  return pointsWithZero;\n}\n\nexport default VersionDownloadChart;\n","import semver from \"semver\";\nimport {\n  PackageDescription,\n  PackageIdentifier,\n  packages,\n} from \"./PackageDescription\";\n\ntype HistoryFile = { points: HistoryPoint[] };\nexport type HistoryPoint = { date: number; version: string; count: number };\n\n/**\n * Allows reading from stored download history of an npm package\n */\nexport default class HistoryReader {\n  private readonly packageDescription: PackageDescription;\n  private readonly historyPoints: HistoryPoint[];\n\n  private majorDatePoints: HistoryPoint[] | null = null;\n  private patchDatePoints: HistoryPoint[] | null = null;\n  private prereleaseDatePoints: HistoryPoint[] | null = null;\n\n  private static instances: Partial<Record<PackageIdentifier, HistoryReader>> =\n    {};\n\n  private constructor(\n    packageIdentifier: PackageIdentifier,\n    historyPoints: HistoryPoint[]\n  ) {\n    this.packageDescription = packages[packageIdentifier];\n    this.historyPoints = historyPoints;\n  }\n\n  static async get(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryReader> {\n    if (!HistoryReader.instances[packageIdentifier]) {\n      const historyFile = await HistoryReader.loadHistoryFile(\n        packageIdentifier\n      );\n\n      HistoryReader.instances[packageIdentifier] = new HistoryReader(\n        packageIdentifier,\n        historyFile.points\n      );\n    }\n    return HistoryReader.instances[packageIdentifier]!;\n  }\n\n  private static async loadHistoryFile(\n    packageIdentifier: PackageIdentifier\n  ): Promise<HistoryFile> {\n    switch (packageIdentifier) {\n      case \"@types/react-native\":\n        return await import(\"./generated_assets/@types_react-native.json\");\n      case \"react-native\":\n        return await import(\"./generated_assets/react-native.json\");\n      case \"react-native-macos\":\n        return await import(\"./generated_assets/react-native-macos.json\");\n      case \"react-native-web\":\n        return await import(\"./generated_assets/react-native-web.json\");\n      case \"react-native-windows\":\n        return await import(\"./generated_assets/react-native-windows.json\");\n    }\n  }\n\n  getMajorDatePoints(): HistoryPoint[] {\n    if (!this.majorDatePoints) {\n      this.majorDatePoints = this.accumulateDatePoints({\n        versionMapper: this.mapToMajor,\n      });\n    }\n    return this.majorDatePoints;\n  }\n\n  private mapToMajor(version: string) {\n    const versionParts = semver.parse(version)!;\n\n    if (versionParts.major === 0) {\n      return `0.${versionParts.minor}`;\n    } else {\n      return `${versionParts.major}.0`;\n    }\n  }\n\n  getPatchDatePoints(): HistoryPoint[] {\n    if (!this.patchDatePoints) {\n      this.patchDatePoints = this.accumulateDatePoints();\n    }\n    return this.patchDatePoints;\n  }\n\n  getPrereleaseDataPoints(): HistoryPoint[] {\n    if (!this.prereleaseDatePoints) {\n      this.prereleaseDatePoints = this.accumulateDatePoints({\n        extraFilter: (point) => !!semver.prerelease(point.version),\n      });\n    }\n    return this.prereleaseDatePoints;\n  }\n\n  getDatePoints(\n    versionFilter: \"major\" | \"patch\" | \"prerelease\"\n  ): HistoryPoint[] {\n    switch (versionFilter) {\n      case \"major\":\n        return this.getMajorDatePoints();\n      case \"patch\":\n        return this.getPatchDatePoints();\n      case \"prerelease\":\n        return this.getPrereleaseDataPoints();\n    }\n  }\n\n  private accumulateDatePoints(opts?: {\n    versionMapper?: (v: string) => string;\n    extraFilter?: (point: HistoryPoint) => boolean;\n  }): HistoryPoint[] {\n    let points: HistoryPoint[];\n\n    if (opts?.extraFilter) {\n      points = this.historyPoints.filter(\n        (point) =>\n          opts.extraFilter!(point) &&\n          this.packageDescription.versionFilter(point.version)\n      );\n    } else {\n      points = this.historyPoints.filter((point) =>\n        this.packageDescription.versionFilter(point.version)\n      );\n    }\n\n    if (opts?.versionMapper) {\n      const pointsByMappedVersion: Record<\n        string,\n        Array<{ date: number; count: number }> | undefined\n      > = {};\n\n      for (const point of points) {\n        const mappedVersion = opts.versionMapper(point.version);\n\n        const versionPoints = pointsByMappedVersion[mappedVersion] ?? [];\n        pointsByMappedVersion[mappedVersion] = versionPoints;\n\n        const versionDatePoint = versionPoints.find(\n          (p) => point.date === p.date\n        );\n\n        if (versionDatePoint) {\n          versionDatePoint.count += point.count;\n        } else {\n          versionPoints.push({ date: point.date, count: point.count });\n        }\n      }\n\n      points = [];\n      for (const [version, pointsByVersion] of Object.entries(\n        pointsByMappedVersion\n      )) {\n        const pointsByVersionByDate = pointsByVersion!.sort(\n          (p1, p2) => p1.date - p2.date\n        );\n        points.push(...pointsByVersionByDate.map((p) => ({ ...p, version })));\n      }\n    }\n\n    return points;\n  }\n}\n","import { createTheme } from \"@fluentui/react\";\n\nexport const darkTheme = createTheme({\n  palette: {\n    themePrimary: \"#79bdbc\",\n    themeLighterAlt: \"#f9fcfc\",\n    themeLighter: \"#e6f4f4\",\n    themeLight: \"#d2ebeb\",\n    themeTertiary: \"#a9d7d6\",\n    themeSecondary: \"#86c5c4\",\n    themeDarkAlt: \"#6daaa9\",\n    themeDark: \"#5c8f8f\",\n    themeDarker: \"#446a69\",\n    neutralLighterAlt: \"#302e2d\",\n    neutralLighter: \"#383735\",\n    neutralLight: \"#464443\",\n    neutralQuaternaryAlt: \"#4e4d4b\",\n    neutralQuaternary: \"#555352\",\n    neutralTertiaryAlt: \"#72706e\",\n    neutralTertiary: \"#c8c8c8\",\n    neutralSecondary: \"#d0d0d0\",\n    neutralPrimaryAlt: \"#dadada\",\n    neutralPrimary: \"#ffffff\",\n    neutralDark: \"#f4f4f4\",\n    black: \"#f8f8f8\",\n    white: \"#252423\",\n  },\n});\n\nexport const lightTheme = createTheme({\n  palette: {\n    themePrimary: \"#467877\",\n    themeLighterAlt: \"#f5fafa\",\n    themeLighter: \"#dae9e9\",\n    themeLight: \"#bbd6d6\",\n    themeTertiary: \"#82aead\",\n    themeSecondary: \"#568887\",\n    themeDarkAlt: \"#3f6c6b\",\n    themeDark: \"#355b5a\",\n    themeDarker: \"#274343\",\n    neutralLighterAlt: \"#f8f8f8\",\n    neutralLighter: \"#f4f4f4\",\n    neutralLight: \"#eaeaea\",\n    neutralQuaternaryAlt: \"#dadada\",\n    neutralQuaternary: \"#d0d0d0\",\n    neutralTertiaryAlt: \"#c8c8c8\",\n    neutralTertiary: \"#0d0d0c\",\n    neutralSecondary: \"#111110\",\n    neutralPrimaryAlt: \"#151514\",\n    neutralPrimary: \"#252423\",\n    neutralDark: \"#1e1d1c\",\n    black: \"#222120\",\n    white: \"#ffffff\",\n  },\n});\n","import React, { useEffect, useState } from \"react\";\nimport styles from \"./PackageCard.module.scss\";\nimport chartStyles from \"./VersionDownloadChart.styles\";\n\nimport {\n  Text,\n  IconButton,\n  TooltipHost,\n  ThemeProvider,\n  ITheme,\n} from \"@fluentui/react\";\n\nimport { CalculatorPercentageIcon } from \"@fluentui/react-icons-mdl2\";\n\nimport { PackageIdentifier, packages } from \"./PackageDescription\";\n\nimport VersionDownloadChart from \"./VersionDownloadChart\";\nimport HistoryReader from \"./HistoryReader\";\nimport { lightTheme } from \"./Themes\";\n\nexport type VersionFilter = \"major\" | \"patch\" | \"prerelease\";\n\nexport type PackageCardProps = {\n  identifier: PackageIdentifier;\n  versionFilter: VersionFilter;\n  theme?: ITheme;\n  tooltipTheme?: ITheme;\n};\n\nfunction maxDays(versionFilter: VersionFilter) {\n  switch (versionFilter) {\n    case \"major\":\n      return 60;\n    case \"patch\":\n      return 30;\n    case \"prerelease\":\n      return 14;\n  }\n}\n\nconst PackageCard: React.FC<PackageCardProps> = ({\n  identifier,\n  versionFilter,\n  theme,\n  tooltipTheme,\n}) => {\n  const [lastVersionFilter, setLastVersionFilter] = useState(versionFilter);\n  const [showAsPercentage, setShowAsPercentage] = useState(false);\n  const [historyReader, setHistoryReader] = useState<HistoryReader | null>(\n    null\n  );\n\n  useEffect(() => {\n    if (!historyReader) {\n      (async () => {\n        const reader = await HistoryReader.get(identifier);\n        setHistoryReader(reader);\n      })();\n    }\n  }, [historyReader, identifier]);\n\n  useEffect(() => {\n    if (versionFilter !== lastVersionFilter) {\n      setShowAsPercentage(false);\n      setLastVersionFilter(versionFilter);\n    }\n  }, [versionFilter, lastVersionFilter]);\n\n  const historyPoints = historyReader?.getDatePoints(versionFilter);\n  const packageDesc = packages[identifier];\n\n  return (\n    <CardFrame\n      theme={theme ?? lightTheme}\n      loaded={!!historyPoints}\n      hasData={!!historyPoints && historyPoints.length > 0}\n    >\n      <div className={styles.header}>\n        <div className={styles.headerLeft} />\n        <div className={styles.headerText}>\n          <Text variant=\"large\" className={styles.packageName}>\n            {packageDesc.friendlyName}\n          </Text>\n          <Text variant=\"medium\">(Downloads/Week)</Text>\n        </div>\n        <div className={styles.headerControls}>\n          <TooltipHost content=\"Show as percentage\" theme={tooltipTheme}>\n            <IconButton\n              toggle\n              aria-label=\"Show as percentage\"\n              disabled={!historyPoints || historyPoints.length === 0}\n              onRenderIcon={() => <CalculatorPercentageIcon />}\n              checked={showAsPercentage}\n              onClick={() => setShowAsPercentage(!showAsPercentage)}\n            />\n          </TooltipHost>\n        </div>\n      </div>\n\n      {historyPoints ? (\n        <div className={styles.chartContainer}>\n          <VersionDownloadChart\n            historyPoints={historyPoints}\n            maxDaysShown={maxDays(versionFilter)}\n            maxVersionsShown={7}\n            measurementTransform={\n              showAsPercentage ? \"percentage\" : \"totalDownloads\"\n            }\n            versionLabeler={packageDesc.versionLabeler}\n            tooltipTheme={tooltipTheme}\n          />\n        </div>\n      ) : (\n        <div style={{ height: chartStyles.responsiveContainer.height }} />\n      )}\n    </CardFrame>\n  );\n};\n\nconst CardFrame: React.FC<{\n  theme: ITheme;\n  loaded: boolean;\n  hasData: boolean;\n}> = ({ loaded, hasData, theme, children }) => {\n  return (\n    <ThemeProvider\n      theme={theme}\n      className={`${styles.packageCardFrame} ${\n        loaded\n          ? hasData\n            ? styles.visibleCardFrame\n            : styles.noDataCardFrame\n          : styles.fadedCardFrame\n      }`}\n    >\n      <div\n        className={`${styles.packageCardContent} ${\n          loaded\n            ? hasData\n              ? styles.visibleCardContent\n              : styles.noDataCardContent\n            : styles.fadedCardContent\n        }`}\n      >\n        {children}\n      </div>\n    </ThemeProvider>\n  );\n};\n\nexport default PackageCard;\n","import { createSvgIcon } from \"@fluentui/react-icons-mdl2\";\n\nconst ReactLogoIcon = createSvgIcon({\n  displayName: \"ReactLogoIcon\",\n  svg: ({ classes }) => (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      viewBox=\"120 2 600 600\"\n      className={classes.svg}\n    >\n      <g fill=\"#61DAFB\">\n        <path d=\"M666.3 296.5c0-32.5-40.7-63.3-103.1-82.4 14.4-63.6 8-114.2-20.2-130.4-6.5-3.8-14.1-5.6-22.4-5.6v22.3c4.6 0 8.3.9 11.4 2.6 13.6 7.8 19.5 37.5 14.9 75.7-1.1 9.4-2.9 19.3-5.1 29.4-19.6-4.8-41-8.5-63.5-10.9-13.5-18.5-27.5-35.3-41.6-50 32.6-30.3 63.2-46.9 84-46.9V78c-27.5 0-63.5 19.6-99.9 53.6-36.4-33.8-72.4-53.2-99.9-53.2v22.3c20.7 0 51.4 16.5 84 46.6-14 14.7-28 31.4-41.3 49.9-22.6 2.4-44 6.1-63.6 11-2.3-10-4-19.7-5.2-29-4.7-38.2 1.1-67.9 14.6-75.8 3-1.8 6.9-2.6 11.5-2.6V78.5c-8.4 0-16 1.8-22.6 5.6-28.1 16.2-34.4 66.7-19.9 130.1-62.2 19.2-102.7 49.9-102.7 82.3 0 32.5 40.7 63.3 103.1 82.4-14.4 63.6-8 114.2 20.2 130.4 6.5 3.8 14.1 5.6 22.5 5.6 27.5 0 63.5-19.6 99.9-53.6 36.4 33.8 72.4 53.2 99.9 53.2 8.4 0 16-1.8 22.6-5.6 28.1-16.2 34.4-66.7 19.9-130.1 62-19.1 102.5-49.9 102.5-82.3zm-130.2-66.7c-3.7 12.9-8.3 26.2-13.5 39.5-4.1-8-8.4-16-13.1-24-4.6-8-9.5-15.8-14.4-23.4 14.2 2.1 27.9 4.7 41 7.9zm-45.8 106.5c-7.8 13.5-15.8 26.3-24.1 38.2-14.9 1.3-30 2-45.2 2-15.1 0-30.2-.7-45-1.9-8.3-11.9-16.4-24.6-24.2-38-7.6-13.1-14.5-26.4-20.8-39.8 6.2-13.4 13.2-26.8 20.7-39.9 7.8-13.5 15.8-26.3 24.1-38.2 14.9-1.3 30-2 45.2-2 15.1 0 30.2.7 45 1.9 8.3 11.9 16.4 24.6 24.2 38 7.6 13.1 14.5 26.4 20.8 39.8-6.3 13.4-13.2 26.8-20.7 39.9zm32.3-13c5.4 13.4 10 26.8 13.8 39.8-13.1 3.2-26.9 5.9-41.2 8 4.9-7.7 9.8-15.6 14.4-23.7 4.6-8 8.9-16.1 13-24.1zM421.2 430c-9.3-9.6-18.6-20.3-27.8-32 9 .4 18.2.7 27.5.7 9.4 0 18.7-.2 27.8-.7-9 11.7-18.3 22.4-27.5 32zm-74.4-58.9c-14.2-2.1-27.9-4.7-41-7.9 3.7-12.9 8.3-26.2 13.5-39.5 4.1 8 8.4 16 13.1 24 4.7 8 9.5 15.8 14.4 23.4zM420.7 163c9.3 9.6 18.6 20.3 27.8 32-9-.4-18.2-.7-27.5-.7-9.4 0-18.7.2-27.8.7 9-11.7 18.3-22.4 27.5-32zm-74 58.9c-4.9 7.7-9.8 15.6-14.4 23.7-4.6 8-8.9 16-13 24-5.4-13.4-10-26.8-13.8-39.8 13.1-3.1 26.9-5.8 41.2-7.9zm-90.5 125.2c-35.4-15.1-58.3-34.9-58.3-50.6 0-15.7 22.9-35.6 58.3-50.6 8.6-3.7 18-7 27.7-10.1 5.7 19.6 13.2 40 22.5 60.9-9.2 20.8-16.6 41.1-22.2 60.6-9.9-3.1-19.3-6.5-28-10.2zM310 490c-13.6-7.8-19.5-37.5-14.9-75.7 1.1-9.4 2.9-19.3 5.1-29.4 19.6 4.8 41 8.5 63.5 10.9 13.5 18.5 27.5 35.3 41.6 50-32.6 30.3-63.2 46.9-84 46.9-4.5-.1-8.3-1-11.3-2.7zm237.2-76.2c4.7 38.2-1.1 67.9-14.6 75.8-3 1.8-6.9 2.6-11.5 2.6-20.7 0-51.4-16.5-84-46.6 14-14.7 28-31.4 41.3-49.9 22.6-2.4 44-6.1 63.6-11 2.3 10.1 4.1 19.8 5.2 29.1zm38.5-66.7c-8.6 3.7-18 7-27.7 10.1-5.7-19.6-13.2-40-22.5-60.9 9.2-20.8 16.6-41.1 22.2-60.6 9.9 3.1 19.3 6.5 28.1 10.2 35.4 15.1 58.3 34.9 58.3 50.6-.1 15.7-23 35.6-58.4 50.6zM320.8 78.4z\" />\n        <circle cx=\"420.9\" cy=\"296.5\" r=\"45.7\" />\n        <path d=\"M520.5 78.1z\" />\n      </g>\n    </svg>\n  ),\n});\n\nexport default ReactLogoIcon;\n","import { CSSProperties } from \"react\";\nimport styles from \"./NavBar.module.scss\";\n\nimport { darkTheme } from \"./Themes\";\n\nimport {\n  ActionButton,\n  IconButton,\n  ITheme,\n  Link,\n  Pivot,\n  PivotItem,\n  Text,\n  ThemeProvider,\n} from \"@fluentui/react\";\n\nimport { GitHubLogoIcon } from \"@fluentui/react-icons-mdl2\";\nimport ReactLogoIcon from \"./assets/ReactLogoIcon\";\n\nexport type NavBarProps<ItemKey extends string> = {\n  items: NavPivotItem<ItemKey>[];\n  onItemSelected?: (key: ItemKey) => void;\n  theme?: ITheme;\n};\n\nexport type NavPivotItem<ItemKey extends string> = {\n  label: string;\n  key: ItemKey;\n};\n\nconst Brand: React.FC<{ className: string }> = ({ className }) => (\n  <div className={className}>\n    <ReactLogoIcon className={styles.reactLogo} />\n    <Text variant=\"large\">React Native Versions</Text>\n  </div>\n);\n\nconst NavBar = <ItemKey extends string>(props: NavBarProps<ItemKey>) => {\n  const theme = props.theme ?? darkTheme;\n  const style: CSSProperties = {\n    backgroundColor: (props.theme ?? darkTheme).semanticColors.bodyBackground,\n  };\n  return (\n    <>\n      <ThemeProvider\n        className={styles.mobileHeader}\n        theme={theme}\n        style={style}\n      >\n        <div className={styles.mobileHeaderContent}>\n          <Brand className={styles.mobileBrand} />\n        </div>\n      </ThemeProvider>\n\n      <ThemeProvider className={styles.nav} theme={theme} style={style}>\n        <div className={styles.navContent}>\n          <Brand className={styles.brand} />\n\n          <Pivot\n            headersOnly\n            className={styles.pivot}\n            onLinkClick={(item) => {\n              window.scrollTo({ left: 0, top: 0, behavior: \"smooth\" });\n              if (props.onItemSelected) {\n                props.onItemSelected(item!.props.itemKey! as ItemKey);\n              }\n            }}\n          >\n            {props.items.map((p) => (\n              <PivotItem headerText={p.label} itemKey={p.key} />\n            ))}\n          </Pivot>\n\n          <Link\n            className={styles.gitHubLink}\n            underline={false}\n            href=\"https://github.com/rn-versions/rn-versions.github.io\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            <ActionButton\n              className={styles.gitHubTextButton}\n              text=\"Contribute\"\n              aria-label=\"Contribute\"\n              onRenderIcon={() => (\n                <GitHubLogoIcon className={styles.gitHubLogo} />\n              )}\n            />\n            <IconButton\n              className={styles.gitHubIconButton}\n              aria-label=\"Contribute\"\n              onRenderIcon={() => (\n                <GitHubLogoIcon className={styles.gitHubLogo} />\n              )}\n            />\n          </Link>\n        </div>\n      </ThemeProvider>\n    </>\n  );\n};\n\nexport default NavBar;\n","import React, { useState } from \"react\";\nimport styles from \"./App.module.scss\";\nimport PackageCard, { VersionFilter } from \"./PackageCard\";\n\nimport { PackageIdentifier } from \"./PackageDescription\";\nimport NavBar, { NavPivotItem } from \"./NavBar\";\nimport { darkTheme, lightTheme } from \"./Themes\";\n\nconst packages: Array<{ name: PackageIdentifier }> = [\n  { name: \"react-native\" },\n  { name: \"@types/react-native\" },\n  { name: \"react-native-windows\" },\n  { name: \"react-native-macos\" },\n  { name: \"react-native-web\" },\n];\n\nconst navItems: NavPivotItem<VersionFilter>[] = [\n  { label: \"Major\", key: \"major\" },\n  { label: \"Patch\", key: \"patch\" },\n  { label: \"Prerelease\", key: \"prerelease\" },\n];\n\nfunction App() {\n  const [versionFilter, setVersionFilter] = useState<VersionFilter>(\"major\");\n\n  return (\n    <div className={styles.app}>\n      <NavBar\n        items={navItems}\n        onItemSelected={(version) => setVersionFilter(version)}\n        theme={darkTheme}\n      />\n\n      <div className={styles.contentContainer}>\n        <div className={styles.cardContainer}>\n          {packages.map((pkg) => (\n            <PackageCard\n              identifier={pkg.name}\n              versionFilter={versionFilter}\n              key={pkg.name}\n              theme={lightTheme}\n              tooltipTheme={darkTheme}\n            />\n          ))}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./Global.scss\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.body\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"frame\":\"VersionTooltip_frame__Ear68\",\"date\":\"VersionTooltip_date__3iXaR\",\"versionsList\":\"VersionTooltip_versionsList__pBT1t\",\"versionsListItem\":\"VersionTooltip_versionsListItem__9IYnp\",\"versionColorIndicator\":\"VersionTooltip_versionColorIndicator__16U_R\",\"versionLabel\":\"VersionTooltip_versionLabel__3hu-9\",\"versionCount\":\"VersionTooltip_versionCount__3pGiH\"};"],"sourceRoot":""}